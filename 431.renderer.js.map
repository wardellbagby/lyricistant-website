{"version":3,"file":"431.renderer.js","mappings":"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","sources":["webpack://lyricistant/./packages/renderer/main/lyricistant_logo.svg","webpack://lyricistant/./packages/renderer/main/globals.ts","webpack://lyricistant/./packages/codemirror/main/lyrics-tokens.ts","webpack://lyricistant/./packages/codemirror/main/lyrics.grammar","webpack://lyricistant/./packages/codemirror/main/lyrics-language.ts","webpack://lyricistant/./packages/codemirror/main/editorTheme.ts","webpack://lyricistant/./packages/codemirror/main/SyntaxNodes.ts","webpack://lyricistant/./packages/codemirror/main/syllableCounts.ts","webpack://lyricistant/./packages/codemirror/main/CodeMirror.tsx","webpack://lyricistant/./packages/codemirror/main/textSelection.ts","webpack://lyricistant/./packages/renderer/main/app/AppError.tsx","webpack://lyricistant/./packages/renderer/main/about/AboutDialog.tsx","webpack://lyricistant/./packages/renderer/main/app/Navigation.ts","webpack://lyricistant/./packages/renderer/main/download/index.ts","webpack://lyricistant/./packages/common/main/releases/ReleaseHelper.ts","webpack://lyricistant/./packages/renderer/main/download/LatestReleaseMachine.ts","webpack://lyricistant/./packages/renderer/main/download/ChooseDownloadDialog.tsx","webpack://lyricistant/./packages/renderer/main/app/useSmallLayout.ts","webpack://lyricistant/./packages/renderer/main/platform/useChannel.ts","webpack://lyricistant/./packages/renderer/main/filehistory/FileHistory.tsx","webpack://lyricistant/./packages/renderer/main/markdown/Markdown.tsx","webpack://lyricistant/./packages/renderer/main/platform/PlatformDialogs.tsx","webpack://lyricistant/./packages/renderer/main/preferences/Preferences.tsx","webpack://lyricistant/./packages/renderer/main/privacy/PrivacyPolicy.tsx","webpack://lyricistant/./packages/renderer/main/app/Modals.tsx","webpack://lyricistant/./packages/renderer/main/detail/NullStateText.tsx","webpack://lyricistant/./packages/renderer/main/diagnostics/DiagnosticsMachine.ts","webpack://lyricistant/./packages/renderer/main/diagnostics/Diagnostics.tsx","webpack://lyricistant/./packages/renderer/main/detail/ListSpacer.tsx","webpack://lyricistant/./packages/renderer/main/detail/WordChip.tsx","webpack://lyricistant/./packages/renderer/main/dictionary/DictionaryMachine.ts","webpack://lyricistant/./packages/renderer/main/dictionary/Dictionary.tsx","webpack://lyricistant/./packages/renderer/main/rhymes/rhyme.ts","webpack://lyricistant/./packages/renderer/main/rhymes/datamuse.ts","webpack://lyricistant/./packages/renderer/main/rhymes/RhymesMachine.ts","webpack://lyricistant/./packages/renderer/main/rhymes/Rhymes.tsx","webpack://lyricistant/./packages/renderer/main/detail/DetailPane.tsx","webpack://lyricistant/./packages/renderer/main/editor/to-platform-file.ts","webpack://lyricistant/./packages/renderer/main/editor/Editor.tsx","webpack://lyricistant/./packages/renderer/main/errors/ErrorHandlers.ts","webpack://lyricistant/./packages/renderer/main/menu/Menu.tsx","webpack://lyricistant/./packages/renderer/main/app/ResponsiveMainDetailLayout.tsx","webpack://lyricistant/./packages/renderer/main/app/SupportedBrowserWarning.tsx","webpack://lyricistant/./packages/renderer/main/index.tsx","webpack://lyricistant/./packages/renderer/main/analytics/setupAnalytics.ts","webpack://lyricistant/./packages/renderer/main/app/PlatformEventsReadyHandler.tsx","webpack://lyricistant/./packages/renderer/main/theme/Themed.tsx","webpack://lyricistant/./packages/renderer/main/app/App.tsx","webpack://lyricistant/./packages/renderer/main/preload.tsx","webpack://lyricistant/./packages/renderer/main/theme/index.ts"],"sourcesContent":["var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nvar SvgLyricistantLogo = function SvgLyricistantLogo(props) {\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 1080 1080\",\n    fillRule: \"evenodd\",\n    strokeLinejoin: \"round\",\n    strokeMiterlimit: 2\n  }, props), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M592.265 470.55c-20.047-.319-38.048.176-52.263.176h-.004c-14.215 0-32.216-.495-52.261-.176-17.723-10.982-53.501-37.388-72.145-80.758-14.428-33.563-24.106-61.379-36.711-79.831-15.816-23.151-35.498-34.601-69.354-29.222-16.637 2.642-33.045 12.088-46.071 26.691-28.142 31.546-40.977 87.562-3.838 141.709 16.956 24.721 45.235 42.363 75.276 54.42-47.412 27.244-75.95 72.203-86.109 127.629-16.644 90.807 25.192 155.58 75.307 197.187 46.396 38.519 114.729 69.158 215.806 69.784l-.15-.005h.504l-.15.005c101.077-.626 169.41-31.265 215.806-69.784 50.115-41.607 91.952-106.38 75.307-197.187-10.159-55.426-38.697-100.385-86.108-127.628 30.042-12.058 58.321-29.7 75.277-54.421 37.139-54.147 24.304-110.163-3.838-141.709-13.026-14.603-29.434-24.049-46.071-26.691-33.856-5.379-53.538 6.071-69.354 29.222-12.605 18.452-22.283 46.268-36.711 79.831-18.644 43.37-54.422 69.776-72.145 80.758zm9.057 96.811 7.257-28.92c2.734-10.894-3.891-21.958-14.785-24.691s-21.958 3.891-24.691 14.785l-7.877 31.391a211.13 211.13 0 0 1-21.225 52.938 211.13 211.13 0 0 1-21.225-52.938l-7.877-31.391c-2.221-8.851-9.941-14.884-18.601-15.369l-1.003-.031a20.35 20.35 0 0 0-5.087.615c-10.894 2.733-17.519 13.797-14.785 24.691l7.257 28.92c24.749 16.308 41.097 44.35 41.097 76.181 0 50.317-40.851 91.168-91.168 91.168s-91.168-40.851-91.168-91.168 40.851-91.168 91.168-91.168a91 91 0 0 1 26.371 3.88c-6.214-12.16-15.449-23.71-28.939-28.208-32.329-10.78-74.18-5.365-115.225 50.487-38.357 52.193-26.981 126.591 18.791 180.196 44.956 52.649 107.783 82.754 210.394 82.448 102.611.306 165.438-29.799 210.394-82.448 45.772-53.605 57.148-128.003 18.791-180.196-41.045-55.852-82.896-61.267-115.225-50.487-13.49 4.498-22.725 16.048-28.939 28.208a91 91 0 0 1 26.371-3.88c50.317 0 91.168 40.851 91.168 91.168s-40.851 91.168-91.168 91.168-91.168-40.851-91.168-91.168c0-31.831 16.348-59.873 41.097-76.181zm-94.991 202.564c-8.501-15.787-4.855-35.363 8.758-47.031a.36.36 0 0 0 .021-.019c14.324-12.277 35.46-12.277 49.784 0l.021.019c13.613 11.668 17.259 31.244 8.758 47.031l-21.615 40.142a13.69 13.69 0 0 1-24.112 0l-21.615-40.142zm84.521-122.913 2.047-3.066a69.52 69.52 0 0 1 62.281-30.745 69.516 69.516 0 0 1 57.73 38.356 16.2 16.2 0 0 1 1.791 7.427 16.29 16.29 0 0 1-16.28 16.28c-6.464 0-12.053-3.775-14.68-9.238a36.954 36.954 0 0 0-63.77-3.988 4.38 4.38 0 0 1-.864.962c-2.601 5.535-8.228 9.37-14.743 9.37a16.29 16.29 0 0 1-16.28-16.28 16.2 16.2 0 0 1 2.768-9.078zm-223.76 4.545a69.512 69.512 0 0 1 57.73-38.356 69.52 69.52 0 0 1 62.281 30.745l.863 1.517a16.21 16.21 0 0 1 3.952 10.627 16.29 16.29 0 0 1-16.28 16.28c-6.214 0-11.62-3.489-14.364-8.614a28.18 28.18 0 0 1-1.242-1.718 36.955 36.955 0 0 0-63.771 3.988c-2.627 5.463-8.216 9.238-14.68 9.238a16.29 16.29 0 0 1-16.28-16.28 16.2 16.2 0 0 1 1.791-7.427zm324.444-169.342c26.738-18.241 61.814-44.063 84.404-67.97 43.613-46.155 16.513-83.682 10.606-90.778-6.432-5.573-13.684-9.381-21.179-10.572-8.894-1.412-16.035-1.075-21.987 1.423-9.37 3.933-15.359 12.718-21.416 24.176-8.84 16.725-16.714 38.739-27.641 64.157-13.125 30.531-33.39 53.993-52.124 70.767 16.318 1.762 32.996 4.52 49.337 8.797zm-253.733-8.797c-18.739-16.78-39.001-40.239-52.124-70.767-10.927-25.418-18.801-47.432-27.641-64.157-6.057-11.458-12.046-20.243-21.416-24.176-5.952-2.498-13.093-2.835-21.987-1.423-7.495 1.191-14.747 4.999-21.179 10.572-5.907 7.096-33.007 44.623 10.606 90.778 22.59 23.907 57.666 49.729 84.403 67.97 16.342-4.277 33.021-7.036 49.338-8.797zm46.617-176.651-26.896-63.322a16.28 16.28 0 0 1 .248-13.284 16.285 16.285 0 0 1 10.063-8.676l117.39-35.176a16.275 16.275 0 0 1 13.09 1.659 16.28 16.28 0 0 1 7.561 10.814l26.739 136.862a16.82 16.82 0 0 1 .173 1.072c5.404 14.505-5.435 34.481-25.776 46.225-21.855 12.618-46.457 10.985-54.903-3.645s2.44-36.752 24.295-49.37c6.731-3.887 13.723-6.421 20.425-7.641l-19.464-99.631-82.762 24.801 28.707 67.584a16.303 16.303 0 0 1 1.117 3.939c6.493 14.584-4.376 35.355-25.285 47.427-21.856 12.618-46.457 10.985-54.904-3.645s2.44-36.752 24.295-49.37c5.226-3.017 10.609-5.22 15.887-6.623z\"\n  })));\n};\nexport { SvgLyricistantLogo as ReactComponent };\nexport default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 1080 1080\\\" fill-rule=\\\"evenodd\\\"\\n     stroke-linejoin=\\\"round\\\" stroke-miterlimit=\\\"2\\\">\\n    <path d=\\\"M592.265 470.55c-20.047-.319-38.048.176-52.263.176h-.004c-14.215 0-32.216-.495-52.261-.176-17.723-10.982-53.501-37.388-72.145-80.758-14.428-33.563-24.106-61.379-36.711-79.831-15.816-23.151-35.498-34.601-69.354-29.222-16.637 2.642-33.045 12.088-46.071 26.691-28.142 31.546-40.977 87.562-3.838 141.709 16.956 24.721 45.235 42.363 75.276 54.42-47.412 27.244-75.95 72.203-86.109 127.629-16.644 90.807 25.192 155.58 75.307 197.187 46.396 38.519 114.729 69.158 215.806 69.784l-.15-.005h.504l-.15.005c101.077-.626 169.41-31.265 215.806-69.784 50.115-41.607 91.952-106.38 75.307-197.187-10.159-55.426-38.697-100.385-86.108-127.628 30.042-12.058 58.321-29.7 75.277-54.421 37.139-54.147 24.304-110.163-3.838-141.709-13.026-14.603-29.434-24.049-46.071-26.691-33.856-5.379-53.538 6.071-69.354 29.222-12.605 18.452-22.283 46.268-36.711 79.831-18.644 43.37-54.422 69.776-72.145 80.758zm9.057 96.811l7.257-28.92c2.734-10.894-3.891-21.958-14.785-24.691s-21.958 3.891-24.691 14.785l-7.877 31.391a211.13 211.13 0 0 1-21.225 52.938 211.13 211.13 0 0 1-21.225-52.938l-7.877-31.391c-2.221-8.851-9.941-14.884-18.601-15.369l-1.003-.031a20.35 20.35 0 0 0-5.087.615c-10.894 2.733-17.519 13.797-14.785 24.691l7.257 28.92c24.749 16.308 41.097 44.35 41.097 76.181 0 50.317-40.851 91.168-91.168 91.168s-91.168-40.851-91.168-91.168 40.851-91.168 91.168-91.168a91 91 0 0 1 26.371 3.88c-6.214-12.16-15.449-23.71-28.939-28.208-32.329-10.78-74.18-5.365-115.225 50.487-38.357 52.193-26.981 126.591 18.791 180.196 44.956 52.649 107.783 82.754 210.394 82.448 102.611.306 165.438-29.799 210.394-82.448 45.772-53.605 57.148-128.003 18.791-180.196-41.045-55.852-82.896-61.267-115.225-50.487-13.49 4.498-22.725 16.048-28.939 28.208a91 91 0 0 1 26.371-3.88c50.317 0 91.168 40.851 91.168 91.168s-40.851 91.168-91.168 91.168-91.168-40.851-91.168-91.168c0-31.831 16.348-59.873 41.097-76.181zm-94.991 202.564c-8.501-15.787-4.855-35.363 8.758-47.031a.36.36 0 0 0 .021-.019c14.324-12.277 35.46-12.277 49.784 0 .007.007.014.013.021.019 13.613 11.668 17.259 31.244 8.758 47.031l-21.615 40.142a13.69 13.69 0 0 1-24.112 0l-21.615-40.142zm84.521-122.913l2.047-3.066a69.52 69.52 0 0 1 62.281-30.745c24.702 1.596 46.687 16.207 57.73 38.356a16.2 16.2 0 0 1 1.791 7.427 16.29 16.29 0 0 1-16.28 16.28c-6.464 0-12.053-3.775-14.68-9.238-5.879-11.742-17.55-19.486-30.661-20.333-13.163-.851-25.781 5.378-33.109 16.345a4.38 4.38 0 0 1-.864.962c-2.601 5.535-8.228 9.37-14.743 9.37a16.29 16.29 0 0 1-16.28-16.28 16.2 16.2 0 0 1 2.768-9.078zm-223.76 4.545c11.039-22.146 33.025-36.76 57.73-38.356a69.52 69.52 0 0 1 62.281 30.745l.863 1.517a16.21 16.21 0 0 1 3.952 10.627 16.29 16.29 0 0 1-16.28 16.28c-6.214 0-11.62-3.489-14.364-8.614a28.18 28.18 0 0 1-1.242-1.718c-7.329-10.967-19.947-17.196-33.11-16.345-13.111.847-24.782 8.591-30.661 20.333-2.627 5.463-8.216 9.238-14.68 9.238a16.29 16.29 0 0 1-16.28-16.28 16.2 16.2 0 0 1 1.791-7.427zm324.444-169.342c26.738-18.241 61.814-44.063 84.404-67.97 43.613-46.155 16.513-83.682 10.606-90.778-6.432-5.573-13.684-9.381-21.179-10.572-8.894-1.412-16.035-1.075-21.987 1.423-9.37 3.933-15.359 12.718-21.416 24.176-8.84 16.725-16.714 38.739-27.641 64.157-13.125 30.531-33.39 53.993-52.124 70.767 16.318 1.762 32.996 4.52 49.337 8.797zm-253.733-8.797c-18.739-16.78-39.001-40.239-52.124-70.767-10.927-25.418-18.801-47.432-27.641-64.157-6.057-11.458-12.046-20.243-21.416-24.176-5.952-2.498-13.093-2.835-21.987-1.423-7.495 1.191-14.747 4.999-21.179 10.572-5.907 7.096-33.007 44.623 10.606 90.778 22.59 23.907 57.666 49.729 84.403 67.97 16.342-4.277 33.021-7.036 49.338-8.797zm46.617-176.651l-26.896-63.322a16.28 16.28 0 0 1 .248-13.284c1.968-4.191 5.628-7.346 10.063-8.676l117.39-35.176c4.402-1.32 9.157-.717 13.09 1.659a16.28 16.28 0 0 1 7.561 10.814l26.739 136.862a16.82 16.82 0 0 1 .173 1.072c5.404 14.505-5.435 34.481-25.776 46.225-21.855 12.618-46.457 10.985-54.903-3.645s2.44-36.752 24.295-49.37c6.731-3.887 13.723-6.421 20.425-7.641l-19.464-99.631-82.762 24.801 28.707 67.584c.548 1.291.917 2.614 1.117 3.939 6.493 14.584-4.376 35.355-25.285 47.427-21.856 12.618-46.457 10.985-54.904-3.645s2.44-36.752 24.295-49.37c5.226-3.017 10.609-5.22 15.887-6.623z\\\"/>\\n</svg>\";","const [APP_VERSION, APP_HOMEPAGE, APP_AUTHOR, APP_PLATFORM] = [\n  process.env.APP_VERSION,\n  process.env.APP_HOMEPAGE,\n  process.env.APP_AUTHOR,\n  process.env.APP_PLATFORM,\n];\n\nexport { APP_AUTHOR, APP_HOMEPAGE, APP_VERSION, APP_PLATFORM };\n","import { ExternalTokenizer } from '@lezer/lr';\nimport { Lyric } from './lyrics.grammar';\n\nconst FORWARD_SLASH = '/'.charCodeAt(0);\nconst NEW_LINE = '\\n'.charCodeAt(0);\nconst EOF = -1;\n\nexport const lyric = new ExternalTokenizer((input) => {\n  let current = input.peek(0);\n  let next = input.peek(1);\n\n  if (current === EOF || current === NEW_LINE) {\n    return;\n  }\n\n  while (true) {\n    if (current === FORWARD_SLASH && next === FORWARD_SLASH) {\n      input.acceptToken(Lyric);\n      return;\n    }\n\n    if (next === NEW_LINE || next === EOF) {\n      input.acceptToken(Lyric, 1);\n      return;\n    }\n\n    current = input.advance();\n    next = input.peek(1);\n  }\n});\n","// This file was generated by lezer-generator. You probably shouldn't edit it.\nimport {LRParser} from \"@lezer/lr\"\nimport {lyric} from \"./lyrics-tokens\"\nexport const parser = LRParser.deserialize({\n  version: 14,\n  states: \"nQVQROOOOQQ'#Cf'#CfOOQQ'#Cb'#CbQVQROOOOQQ-E6`-E6`\",\n  stateData: \"j~OXOS~OPPORPOSPOTPO~OSRXR~\",\n  goto: \"fZPPPPPP[PPPbQRORSRTQOR\",\n  nodeNames: \"⚠ Lyric Lyrics LineComment TodoComment Context\",\n  maxTerm: 10,\n  skippedNodes: [0],\n  repeatNodeCount: 1,\n  tokenData: \")k~R[X^wpqw!P!Q!l!}#O(W#y#zw$f$gw#BY#BZw$IS$I_w$I|$JOw$JT$JUw$KV$KWw&FU&FVw~|YX~X^wpqw#y#zw$f$gw#BY#BZw$IS$I_w$I|$JOw$JT$JUw$KV$KWw&FU&FVw~!oP!P!Q!r~!wYR~OY#gZp#gpq$Oq!v#g!v!w$m!w#h#g#h#i&o#i;'S#g;'S;=`#x<%lO#g~#lSR~OY#gZ;'S#g;'S;=`#x<%lO#g~#{P;=`<%l#g~$TWR~OY#gZ!v#g!v!w$m!w#h#g#h#i&o#i;'S#g;'S;=`#x<%lO#g~$rUR~OY#gZ!q#g!q!r%U!r;'S#g;'S;=`#x<%lO#g~%ZUR~OY#gZ!f#g!f!g%m!g;'S#g;'S;=`#x<%lO#g~%rUR~OY#gZ!q#g!q!r&U!r;'S#g;'S;=`#x<%lO#g~&]SS~R~OY&UZ;'S&U;'S;=`&i<%lO&U~&lP;=`<%l&U~&tUR~OY#gZ#c#g#c#d'W#d;'S#g;'S;=`#x<%lO#g~']UR~OY#gZ#W#g#W#X'o#X;'S#g;'S;=`#x<%lO#g~'tUR~OY#gZ#c#g#c#d&U#d;'S#g;'S;=`#x<%lO#g~(ZSOY(gZ;'S(g;'S;=`)e<%lO(g~(jUOY(gZ#P(g#P#Q(|#Q;'S(g;'S;=`)e<%lO(g~)RUT~OY(gZ#P(g#P#Q(|#Q;'S(g;'S;=`)e<%lO(g~)hP;=`<%l(g\",\n  tokenizers: [0, lyric],\n  topRules: {\"Lyrics\":[0,2]},\n  tokenPrec: 21\n})\n\n          export default parser\n          // This file was generated by lezer-generator. You probably shouldn't edit it.\nexport const\n  Lyric = 1,\n  Lyrics = 2,\n  LineComment = 3,\n  TodoComment = 4,\n  Context = 5\n","import { LRLanguage, LanguageSupport } from '@codemirror/language';\nimport { styleTags, tags as t, Tag } from '@lezer/highlight';\nimport { parser } from './lyrics.grammar';\n\nexport const todoComment = Tag.define();\nexport const context = Tag.define();\nconst LyricsLanguage = LRLanguage.define({\n  parser: parser.configure({\n    props: [\n      styleTags({\n        LineComment: t.lineComment,\n        TodoComment: todoComment,\n        Context: context,\n      }),\n    ],\n  }),\n  languageData: {\n    commentTokens: { line: '//' },\n  },\n});\n\nexport const Lyrics = () => new LanguageSupport(LyricsLanguage);\n","import { HighlightStyle, syntaxHighlighting } from '@codemirror/language';\nimport { Extension } from '@codemirror/state';\nimport { EditorView } from '@codemirror/view';\nimport { tags } from '@lezer/highlight';\nimport { context, todoComment } from '@lyricistant/codemirror/lyrics-language';\nimport { Theme } from '@mui/material';\n\nconst textColorSelectionStyle = (appTheme: Theme) => ({\n  '&::selection': {\n    backgroundColor: appTheme.palette.primary.main,\n    color: appTheme.palette.getContrastText(appTheme.palette.primary.main),\n  },\n});\nexport const editorTheme = (appTheme: Theme, font: string): Extension => [\n  syntaxHighlighting(\n    HighlightStyle.define([\n      {\n        tag: tags.lineComment,\n        color: appTheme.palette.text.disabled,\n        ...textColorSelectionStyle(appTheme),\n      },\n      {\n        tag: [todoComment, context],\n        color: appTheme.palette.primary.main,\n        ...textColorSelectionStyle(appTheme),\n      },\n    ])\n  ),\n  EditorView.theme(\n    {\n      '&.cm-editor': {\n        backgroundColor: appTheme.palette.background.default,\n        caretColor: appTheme.palette.text.primary,\n        height: '100%',\n      },\n      '&.cm-scroller': {\n        overflow: 'auto',\n      },\n      '&.cm-focused': {\n        outline_fallback: 'none !important',\n        outline: 'none !important',\n      },\n      '.cm-line-widget': {\n        color: appTheme.palette.text.disabled,\n        borderColor: appTheme.palette.text.disabled,\n      },\n      '.cm-line': {\n        color: appTheme.palette.text.primary,\n        ...textColorSelectionStyle(appTheme),\n      },\n      '.cm-mark': {\n        borderBottom: `2px solid ${appTheme.palette.primary.main}55`,\n        ...textColorSelectionStyle(appTheme),\n      },\n      '.cm-scroller': {\n        fontFamily: `\"${font}\"`,\n        fontSize: `${appTheme.typography.fontSize}px`,\n        paddingTop: '16px',\n        paddingBottom: '16px',\n        paddingLeft: '8px',\n        paddingRight: '8px',\n      },\n      '.cm-gutters': {\n        width: '60px',\n        justifyContent: 'center',\n        backgroundColor: appTheme.palette.background.default,\n        color: appTheme.palette.text.secondary,\n        borderRight: 'none',\n      },\n      '.cm-panel': {\n        backgroundColor: appTheme.palette.background.paper,\n        color: appTheme.palette.getContrastText(\n          appTheme.palette.background.paper\n        ),\n      },\n      '.cm-searchMatch': {\n        backgroundColor: appTheme.palette.grey.A100,\n        color: appTheme.palette.getContrastText(appTheme.palette.grey.A100),\n      },\n      '.cm-searchMatch.selected': {\n        backgroundColor: appTheme.palette.primary.main,\n        color: appTheme.palette.primary.contrastText,\n      },\n      '.cm-button': {\n        background: appTheme.palette.primary.main,\n        color: appTheme.palette.primary.contrastText,\n        border: 'none',\n        borderRadius: '0px',\n        margin: '2px',\n        padding: '8px',\n        width: '100px',\n        height: '35px',\n        textAlign: 'center',\n        textDecoration: 'none',\n        display: 'inline-block',\n        fontFamily: '\"Roboto\"',\n        fontSize: appTheme.typography.fontSize,\n        '&:focus': {\n          outline: 'none',\n        },\n        '&:active': {\n          background: appTheme.palette.action.active,\n        },\n      },\n      '.cm-textfield': {\n        color: appTheme.palette.text.primary,\n        padding: '8px',\n        width: '150px',\n        height: '35px',\n        textDecoration: 'none',\n        fontFamily: '\"Roboto\"',\n        fontSize: appTheme.typography.fontSize,\n        '&:focus': {\n          outline: 'none',\n        },\n      },\n      '.cm-panel label': {\n        display: 'none',\n        fontFamily: '\"Roboto\"',\n        fontSize: appTheme.typography.fontSize,\n      },\n      '.cm-panel.cm-search [name=select]': {\n        display: 'none',\n      },\n      '.cm-panel.cm-search [name=close]': {\n        fontSize: '24px',\n        right: '8px',\n        '&:focus': {\n          outline: 'none',\n        },\n        color: appTheme.palette.text.primary,\n      },\n    },\n    {\n      dark: appTheme.palette.mode === 'dark',\n    }\n  ),\n];\n","import { syntaxTree } from '@codemirror/language';\nimport { EditorState, SelectionRange } from '@codemirror/state';\nimport { SyntaxNode } from '@lezer/common';\n\nexport const joinNodesToText = (\n  state: EditorState,\n  nodes: SyntaxNode[]\n): string => nodes.map((node) => state.sliceDoc(node.from, node.to)).join(' ');\n\nconst nonLyricNodeTypes = ['LineComment', 'TodoComment', 'Context'];\n\nexport const getLyricNodesBetween = (\n  state: EditorState,\n  from: number,\n  to: number\n) =>\n  getNodesBetween(state, from, to).filter(\n    (node) => !nonLyricNodeTypes.find((name) => name === node.type.name)\n  );\n\nexport const doesNodeContainSelection = (\n  node: SyntaxNode,\n  selection: SelectionRange\n): boolean => node.from <= selection.to && node.to >= selection.to;\n\nexport const getNodesBetween = (\n  state: EditorState,\n  from: number,\n  to: number\n) => {\n  const nodes = [];\n  const cursor = syntaxTree(state).cursorAt(from, 1);\n  let pos = from;\n  while (pos < to) {\n    let checkChild = true;\n    if (cursor.node.to <= to && cursor.node.from >= from) {\n      nodes.push(cursor.node);\n      checkChild = false;\n    }\n    if (!cursor.next(checkChild)) {\n      return nodes;\n    }\n    pos = cursor.from;\n  }\n\n  return nodes;\n};\n","import { Extension } from '@codemirror/state';\nimport { lineNumbers } from '@codemirror/view';\nimport {\n  getNodesBetween,\n  getLyricNodesBetween,\n  joinNodesToText,\n} from '@lyricistant/codemirror/SyntaxNodes';\nimport syllable from 'syllable';\n\nexport const syllableCounts = (): Extension =>\n  lineNumbers({\n    formatNumber: (lineNo, state) => {\n      if (lineNo > state.doc.lines) {\n        return '0';\n      }\n\n      const { from, to } = state.doc.line(lineNo);\n      const nodes = getNodesBetween(state, from, to);\n      const supportedNodes = getLyricNodesBetween(state, from, to);\n\n      if (nodes.length === 0) {\n        return '0';\n      }\n      if (supportedNodes.length === 0) {\n        return ' ';\n      }\n\n      const text = joinNodesToText(state, supportedNodes);\n      return syllable(text).toString();\n    },\n  });\n","import {\n  defaultKeymap,\n  history,\n  historyKeymap,\n  redo as redoTextChange,\n  undo as undoTextChange,\n  undoDepth,\n} from '@codemirror/commands';\nimport { Diagnostic, linter, setDiagnostics } from '@codemirror/lint';\nimport { openSearchPanel, searchKeymap } from '@codemirror/search';\nimport {\n  Compartment,\n  EditorState,\n  EditorStateConfig,\n  Extension,\n  RangeSet,\n  StateEffect,\n  StateField,\n  Text,\n} from '@codemirror/state';\nimport {\n  Decoration,\n  DecorationSet,\n  EditorView,\n  keymap,\n  placeholder,\n} from '@codemirror/view';\nimport { Lyrics } from '@lyricistant/codemirror/lyrics-language';\nimport { useTheme } from '@mui/material';\nimport { differenceWith, isEqual, sample } from 'lodash-es';\nimport {\n  useCallback,\n  useEffect,\n  useLayoutEffect,\n  useMemo,\n  useState,\n} from 'react';\nimport { editorTheme } from './editorTheme';\nimport { syllableCounts } from './syllableCounts';\nimport { textSelection, TextSelectionData } from './textSelection';\n\nexport { Text };\n\nconst placeholders = [\n  'Type your lyrics...',\n  'Write your epic...',\n  'Show me your poetry...',\n  'Jot down your thoughts...',\n  'Input musings here...',\n  'Pen your next masterpiece...',\n  \"Let's write some rhymes...\",\n  \"Let's start your song...\",\n  'Tell me your story...',\n  'Speak (err, write?) your mind...',\n  'Let me assist your lyrics...',\n  'Create your next classic...',\n  \"Let's make your magnum opus...\",\n  'What do you want to write today?',\n  'Put your feelings to words...',\n];\n\ninterface Mark {\n  from: number;\n  to: number;\n}\n\nconst textChanged = (\n  onTextChanged: (text: Text, cursorPosition: number) => void\n) =>\n  EditorView.updateListener.of((update) => {\n    if (update.docChanged || update.selectionSet) {\n      onTextChanged(update.state.doc, update.state.selection.main.from);\n    }\n  });\n\nconst fileDropped = (onFileDropped: (item: DataTransferItem | File) => void) =>\n  EditorView.domEventHandlers({\n    drop: (event) => {\n      event.stopPropagation();\n      event.preventDefault();\n      if (\n        event.dataTransfer?.items?.length > 0 ||\n        event.dataTransfer?.files?.length > 0\n      ) {\n        onFileDropped(\n          event.dataTransfer?.items?.[0] || event.dataTransfer?.files?.[0]\n        );\n      }\n    },\n  });\n\ninterface ReconfigurableExtension {\n  compartment: Compartment;\n  extension: Extension;\n}\n\nconst useReconfigurableExtension = (\n  view: EditorView,\n  configs: ReconfigurableExtension[]\n) => {\n  const [lastConfigs, setLastConfigs] = useState<ReconfigurableExtension[]>([]);\n  useLayoutEffect(() => {\n    if (!view) {\n      return;\n    }\n\n    const changedConfigs = differenceWith(configs, lastConfigs, isEqual);\n\n    if (changedConfigs.length > 0) {\n      view.dispatch({\n        effects: changedConfigs.map(({ compartment, extension }) =>\n          compartment.reconfigure(extension)\n        ),\n      });\n      setLastConfigs(configs);\n    }\n  }, configs);\n};\n\nexport interface CodeMirrorEditorProps {\n  text: Text;\n  cursorPosition?: number;\n  font: string;\n  markedText?: Mark;\n  onTextSelected: (word: TextSelectionData) => void;\n  onTextChanged: (text: Text, cursorPosition: number) => void;\n  onFileDropped: (item: DataTransferItem | File) => void;\n  diagnostics?: Diagnostic[];\n}\n\nconst markDecoration = Decoration.mark({ class: 'cm-mark' });\nconst setMark = StateEffect.define<Mark | null>({\n  map: (mark, change) => {\n    if (!mark) {\n      return null;\n    }\n    return {\n      from: change.mapPos(mark.from),\n      to: change.mapPos(mark.to),\n    };\n  },\n});\n\nconst isApplicableAddMarkEffect = (\n  effect: StateEffect<Mark>,\n  doc: Text\n): boolean =>\n  effect.value &&\n  effect.value.from < doc.length &&\n  effect.value.to <= doc.length &&\n  effect.value.to - effect.value.from > 0;\n\nconst markStateField = StateField.define<DecorationSet>({\n  create() {\n    return Decoration.none;\n  },\n  update(marks, tr) {\n    for (const effect of tr.effects) {\n      if (\n        effect.is(setMark) &&\n        isApplicableAddMarkEffect(effect, tr.state.doc)\n      ) {\n        return RangeSet.of(\n          markDecoration.range(effect.value.from, effect.value.to)\n        );\n      } else if (effect.is(setMark) && !effect.value) {\n        return Decoration.none;\n      }\n    }\n    return marks.map(tr.changes);\n  },\n  provide: (field) => EditorView.decorations.from(field),\n});\n\nexport const useCodeMirror = (props: CodeMirrorEditorProps) => {\n  const [view, setView] = useState<EditorView>(null);\n  const [container, setContainer] = useState<HTMLDivElement>(null);\n  const [resetCount, setResetCount] = useState(0);\n\n  const appTheme = useTheme();\n  const themeCompartment = useMemo(() => new Compartment(), []);\n  const textCompartment = useMemo(() => new Compartment(), []);\n  const selectionCompartment = useMemo(() => new Compartment(), []);\n  const fileDroppedCompartment = useMemo(() => new Compartment(), []);\n\n  const themeExtension = useMemo(\n    () => editorTheme(appTheme, props.font),\n    [appTheme.palette, appTheme.typography, props.font]\n  );\n  const textChangedExtension = useMemo(\n    () => textChanged(props.onTextChanged),\n    [props.onTextChanged]\n  );\n  const selectionExtension = useMemo(\n    () => textSelection(props.onTextSelected),\n    [props.onTextSelected]\n  );\n  const fileDroppedExtension = useMemo(\n    () => fileDropped(props.onFileDropped),\n    [props.onFileDropped]\n  );\n\n  useEffect(() => {\n    if (!view) {\n      return;\n    }\n\n    const effects: Array<StateEffect<Mark>> = [];\n\n    if (!props.markedText || props.markedText.to === props.markedText.from) {\n      effects.push(setMark.of(null));\n    } else {\n      effects.push(setMark.of(props.markedText));\n    }\n\n    view.dispatch({ effects });\n  }, [props.markedText, view]);\n\n  /*\n  When the view gets its state set explicitly set (like it does when its first\n  created and whenever we need to clear the undo state), this is used to provide\n  default extensions. This is not used for \"transactional\" updates, like prop\n  changes. Only when view.setState is called.\n  \n  This still needs to be kept up to date on prop changes because we never know\n  when a new state update is going to happen. In order to reconfigure (i.e.,\n  recreate) an extension due to prop changes, rely on useReconfigurableExtension\n  instead.\n   */\n  const defaultConfig = useMemo<EditorStateConfig>(\n    () => ({\n      extensions: [\n        Lyrics(),\n        syllableCounts(),\n        history(),\n        EditorView.lineWrapping,\n        placeholder(sample(placeholders)),\n        themeCompartment.of(themeExtension),\n        textCompartment.of(textChangedExtension),\n        selectionCompartment.of(selectionExtension),\n        fileDroppedCompartment.of(fileDroppedExtension),\n        markStateField,\n        keymap.of([...defaultKeymap, ...historyKeymap, ...searchKeymap]),\n        linter(() => [], { delay: 0, tooltipFilter: () => [] }),\n      ],\n    }),\n    [\n      appTheme,\n      themeExtension,\n      textChangedExtension,\n      selectionExtension,\n      fileDroppedExtension,\n      resetCount,\n    ]\n  );\n\n  useEffect(() => {\n    if (!container) {\n      return;\n    }\n\n    const newView = new EditorView({\n      parent: container,\n    });\n    newView.setState(\n      EditorState.create({\n        ...defaultConfig,\n        doc: props.text,\n      })\n    );\n    setView(newView);\n\n    return () => {\n      if (!container) {\n        setView(null);\n        newView.destroy();\n      }\n    };\n  }, [container]);\n\n  useEffect(\n    () => () => {\n      if (view) {\n        view.destroy();\n        setView(undefined);\n      }\n    },\n    [view]\n  );\n\n  useEffect(() => {\n    const currentText = view ? view.state.doc : Text.empty;\n    if (view && !props.text.eq(currentText)) {\n      view.dispatch({\n        changes: {\n          from: 0,\n          to: currentText.length,\n          insert: props.text ?? Text.empty,\n        },\n      });\n    }\n  }, [props.text, view]);\n\n  useEffect(() => {\n    if (\n      view &&\n      props.cursorPosition !== undefined &&\n      view.state.selection.main.empty &&\n      view.state.selection.main.anchor !== props.cursorPosition\n    ) {\n      view.dispatch({\n        selection: {\n          anchor: props.cursorPosition,\n        },\n      });\n    }\n  }, [props.cursorPosition, view]);\n\n  const reconfigurableExtensions = useMemo(\n    () => [\n      {\n        compartment: themeCompartment,\n        extension: themeExtension,\n      },\n      {\n        compartment: textCompartment,\n        extension: textChangedExtension,\n      },\n      {\n        compartment: selectionCompartment,\n        extension: selectionExtension,\n      },\n      {\n        compartment: fileDroppedCompartment,\n        extension: fileDroppedExtension,\n      },\n    ],\n    [\n      themeCompartment,\n      themeExtension,\n      textCompartment,\n      textChangedExtension,\n      selectionCompartment,\n      selectionExtension,\n      fileDroppedCompartment,\n      fileDroppedExtension,\n    ]\n  );\n  useReconfigurableExtension(view, reconfigurableExtensions);\n\n  useEffect(() => {\n    if (!container) {\n      return;\n    }\n\n    Array.from(container.getElementsByClassName('cm-content')).forEach(\n      (element) => {\n        element.setAttribute('autocapitalize', 'on');\n      }\n    );\n  }, [container]);\n\n  const resetHistory = useCallback(() => {\n    setResetCount((count) => count + 1);\n    return view?.setState(\n      EditorState.create({ ...defaultConfig, doc: props.text })\n    );\n  }, [view, defaultConfig, props.text]);\n  const undo = useCallback(() => undoTextChange(view), [view]);\n  const redo = useCallback(() => redoTextChange(view), [view]);\n  const openFindReplaceDialog = useCallback(\n    () => openSearchPanel(view),\n    [view]\n  );\n\n  useEffect(() => {\n    if (view?.state) {\n      view.dispatch(setDiagnostics(view.state, props.diagnostics));\n    }\n  }, [props.diagnostics, view?.state]);\n\n  return {\n    view,\n    isModified: view?.state ? undoDepth(view.state) !== 0 : false,\n    resetHistory,\n    undo,\n    redo,\n    openFindReplaceDialog,\n    setContainer,\n  };\n};\n","import { SelectionRange, Text } from '@codemirror/state';\nimport { EditorView } from '@codemirror/view';\nimport { SyntaxNode } from '@lezer/common';\nimport {\n  doesNodeContainSelection,\n  getLyricNodesBetween,\n} from '@lyricistant/codemirror/SyntaxNodes';\n\nexport interface TextSelectionData {\n  from: number;\n  to: number;\n  text: string;\n}\n\nexport const textSelection = (\n  onTextSelected: (word: TextSelectionData) => void\n) => [\n  EditorView.updateListener.of((update) => {\n    if (update.selectionSet) {\n      const selectionRange = update.state.selection.asSingle().main;\n      let nodes: SyntaxNode[];\n\n      if (selectionRange.empty) {\n        const { from, to } = update.state.doc.lineAt(selectionRange.from);\n        nodes = getLyricNodesBetween(update.state, from, to);\n      } else {\n        nodes = getLyricNodesBetween(\n          update.state,\n          selectionRange.from,\n          selectionRange.to\n        );\n      }\n\n      const hasLyricSelection = nodes.find((node) =>\n        doesNodeContainSelection(node, selectionRange)\n      );\n\n      if (hasLyricSelection) {\n        onTextSelected(findWordAt(update.state.doc, selectionRange));\n      }\n    }\n  }),\n];\n\nexport const findWordAt = (document: Text, position: SelectionRange) => {\n  const line = document.lineAt(position.head);\n  const isDelimiter = (c: string) => /[^\\w\\-']+/.exec(c);\n\n  let start;\n  let end;\n\n  if (position.empty) {\n    if (position.assoc === 1) {\n      start = position.from - line.from;\n      end = position.from + 1 - line.from;\n    } else {\n      start = position.from - 1 - line.from;\n      end = position.from - line.from;\n    }\n  } else {\n    start = position.from - line.from;\n    end = position.to - line.from;\n  }\n\n  while (start >= 0 && !isDelimiter(line.text[start])) {\n    start -= 1;\n  }\n  start = Math.max(0, start + 1);\n\n  while (end < line.length && !isDelimiter(line.text[end])) {\n    end += 1;\n  }\n  end = Math.max(start, end);\n\n  return {\n    from: start + line.from,\n    to: end + line.from,\n    text: line.text.substring(start, end),\n  };\n};\n","import {\n  Box,\n  Button,\n  Dialog,\n  DialogActions,\n  DialogTitle,\n  Link,\n  Typography,\n} from '@mui/material';\nimport React, { useCallback, useEffect } from 'react';\n\ninterface AppErrorProps {\n  error: any;\n  editorText: string;\n}\n\n/**\n * A dialog that displays whenever an unrecoverable error occurs while\n * Lyricistant is running.\n *\n * @param error The error that occured. While display in development build.\n * @param editorText The text that was in the editor before the error occurred.\n */\nexport function AppError({ error, editorText }: AppErrorProps) {\n  const onClose = useCallback(() => window.location.reload(), []);\n  const onCopy = useCallback(\n    () => window.navigator.clipboard.writeText(editorText),\n    []\n  );\n  const onDownloadLogs = useCallback(() => {\n    platformDelegate.send('save-logs');\n  }, []);\n\n  useEffect(() => {\n    logger.error('Error in renderer', error.toString());\n  }, [error]);\n  return (\n    <Dialog onClose={onClose} open>\n      <DialogTitle>Application error</DialogTitle>\n      <Box paddingLeft={'32px'} paddingRight={'32px'} paddingBottom={'24px'}>\n        <Typography paragraph>\n          Sorry, an error has occurred in Lyricistant. Press reload to continue,\n          but any unsaved data may be lost. You can also copy your current\n          lyrics to the clipboard, and attempt to download logs.\n        </Typography>\n        <Link\n          href={'https://github.com/wardellbagby/lyricistant/issues/new/choose'}\n          rel=\"noopener\"\n          variant={'body1'}\n        >\n          Click here to report an issue.\n        </Link>\n      </Box>\n      <DialogActions>\n        <Button variant={'text'} onClick={onDownloadLogs}>\n          Download logs\n        </Button>\n        <Button variant={'text'} onClick={onCopy}>\n          Copy lyrics\n        </Button>\n        <Button variant={'text'} color={'warning'} onClick={onClose}>\n          Reload\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import { APP_HOMEPAGE, APP_VERSION } from '@lyricistant/renderer/globals';\nimport { ReactComponent as Logo } from '@lyricistant/renderer/lyricistant_logo.svg';\nimport {\n  Box,\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  Grid,\n  Link,\n  Table,\n  TableBody,\n  TableCell,\n  TableCellProps,\n  TableContainer,\n  TableRow,\n  Typography,\n  useTheme,\n} from '@mui/material';\nimport React, { ReactChild } from 'react';\n\nconst aboutInfo: Record<string, ReactChild> = {\n  'Code repository': (\n    <Link target=\"_blank\" rel=\"noopener\" href={APP_HOMEPAGE}>\n      GitHub\n    </Link>\n  ),\n  'My website': (\n    <Link target=\"_blank\" rel=\"noopener\" href={'https://wardellbagby.com'}>\n      wardellbagby.com\n    </Link>\n  ),\n  'Report an issue': (\n    <Link\n      target=\"_blank\"\n      rel=\"noopener\"\n      href={'https://github.com/wardellbagby/lyricistant/issues/new'}\n    >\n      Issues\n    </Link>\n  ),\n};\n\nconst DividerlessTableCell = (props: TableCellProps) => (\n  <TableCell sx={{ borderBottom: 'none' }} {...props} />\n);\n\n/** The props needed to render an {@link AboutDialog}. */\ninterface AboutDialogProps {\n  /** Whether this dialog is opened or not. */\n  open: boolean;\n  /** Invoked when the {@link AboutDialog} is closed. */\n  onClose: () => void;\n}\n\n/**\n * A dialog that shows information about Lyricistant, links to the author, a\n * link to report issues, and a button to download logs.\n *\n * @param props The props needed to render this component.\n */\nexport const AboutDialog = (props: AboutDialogProps) => {\n  const theme = useTheme();\n  return (\n    <Dialog\n      onClose={props.onClose}\n      open={props.open}\n      className={'paper'}\n      scroll={'paper'}\n    >\n      <DialogContent>\n        <Grid\n          container\n          spacing={1}\n          direction=\"column\"\n          justifyContent=\"center\"\n          alignItems=\"center\"\n        >\n          <Grid item xs={12}>\n            <Logo\n              height={'96px'}\n              width={'96px'}\n              fill={theme.palette.primary.main}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <Typography variant={'h6'}>Lyricistant - {APP_VERSION}</Typography>\n          </Grid>\n          <Grid item xs={8}>\n            <p>\n              Hey! I'm Wardell, and I created Lyricistant! This app is\n              completely free to use and entirely open-source. Make your own\n              modifications, just make sure to make them open-source as well!\n            </p>\n            <p>\n              I use Lyricistant personally to write my own music, which I'd love\n              for you to listen to! Catch me on{' '}\n              <Link\n                target=\"_blank\"\n                rel=\"noopener\"\n                href={'https://open.spotify.com/artist/5NaXw8enpDRFxiTcB0J6H5'}\n              >\n                Spotify\n              </Link>\n              ,{' '}\n              <Link\n                target=\"_blank\"\n                rel=\"noopener\"\n                href={\n                  'https://music.apple.com/us/artist/mr-chandler/1331569890'\n                }\n              >\n                Apple Music\n              </Link>\n              , or peep my{' '}\n              <Link\n                target=\"_blank\"\n                rel=\"noopener\"\n                href={'https://soundcloud.com/mr-chandler'}\n              >\n                SoundCloud.\n              </Link>\n            </p>\n            <p>Enjoy using Lyricistant!</p>\n          </Grid>\n          <Grid item xs={12}>\n            <TableContainer>\n              <Table size={'small'}>\n                <TableBody>\n                  {Object.keys(aboutInfo)\n                    .map((key: keyof typeof aboutInfo) => [key, aboutInfo[key]])\n                    .map(([key, value]: [string, ReactChild]) => (\n                      <TableRow key={key}>\n                        <DividerlessTableCell>{key}</DividerlessTableCell>\n                        <DividerlessTableCell>{value}</DividerlessTableCell>\n                      </TableRow>\n                    ))}\n                </TableBody>\n              </Table>\n            </TableContainer>\n          </Grid>\n          <Box height={'8px'} />\n          <Grid item xs={12}>\n            <Button\n              variant={'outlined'}\n              onClick={() => platformDelegate.send('save-logs')}\n            >\n              Download logs\n            </Button>\n          </Grid>\n        </Grid>\n      </DialogContent>\n      <DialogActions>\n        <Button fullWidth variant={'contained'} onClick={props.onClose}>\n          Close\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n","import { useCallback } from 'react';\nimport { useLocation } from 'wouter';\n\n/** The paths that Lyricistant can navigate to. */\nconst routes = [\n  '/',\n  '/about',\n  '/download',\n  '/file-history',\n  '/preferences',\n  '/privacypolicy',\n] as const;\n/** The paths that Lyricistant can navigate to. */\nexport type RoutePaths = (typeof routes)[number];\n\nexport const useNavigation = () => {\n  const setLocation = useLocation()[1];\n  return (path: RoutePaths, options?: { replace?: boolean }) => {\n    setLocation(path.replace('/', ''), options);\n  };\n};\n\nexport const useBackNavigation = () => {\n  const navigate = useNavigation();\n  return useCallback(() => {\n    const state: Record<string, any> = window.history.state;\n    if (state?.['internal'] === true) {\n      window.history.back();\n    } else {\n      navigate('/', { replace: true });\n    }\n  }, []);\n};\n","export interface Release {\n  platform: 'Mac' | 'Windows' | 'Linux' | 'Android' | 'iOS';\n  asset?: string;\n  url?: string;\n  arch?: string;\n}\n\nexport const supportedReleases: Release[] = [\n  { platform: 'Mac', asset: 'lyricistant-mac_x64.dmg' },\n  {\n    platform: 'Windows',\n    asset: 'lyricistant-win.exe',\n  },\n  {\n    platform: 'iOS',\n    url: 'https://apps.apple.com/om/app/lyricistant/id1561506174',\n  },\n  {\n    platform: 'Android',\n    url: 'https://play.google.com/store/apps/details?id=com.wardellbagby.lyricistant',\n  },\n  {\n    platform: 'Linux',\n    asset: 'lyricistant-linux_x86_64.AppImage',\n    arch: 'x64',\n  },\n  {\n    platform: 'Linux',\n    asset: 'lyricistant-linux_arm64.AppImage',\n    arch: 'arm64',\n  },\n];\n","import { isUnderTest } from '@lyricistant/common/BuildModes';\nimport { Logger } from '@lyricistant/common/Logger';\nimport { Octokit, RestEndpointMethodTypes } from '@octokit/rest';\nimport semver from 'semver';\n\nexport interface ReleaseData {\n  baseDownloadUrl: string;\n  changelog: string;\n}\n\nexport type GitHubRelease =\n  RestEndpointMethodTypes['repos']['listReleases']['response']['data'][0];\n\nexport class ReleaseHelper {\n  private static readonly LYRICISTANT_REPO = {\n    owner: 'wardellbagby',\n    repo: 'lyricistant',\n  };\n\n  private readonly octokit: Octokit;\n  private cachedReleases: GitHubRelease[] = [];\n\n  public constructor(private logger: Logger) {\n    this.octokit = new Octokit();\n  }\n\n  /**\n   * Returns the latest release of Lyricistant that can be downloaded. By\n   * default, this will only consider releases newer than the current, but by\n   * setting `options.includeCurrentVersion`, the current release will also be included.\n   *\n   * @param currentVersion The current version of Lyricistant that is running this check.\n   * @param options Options for how to decide what the \"latest\" release is.\n   */\n  public getLatestDownloadableRelease = async (\n    currentVersion: string,\n    options: { includeCurrentVersion?: boolean } = {\n      includeCurrentVersion: false,\n    }\n  ): Promise<ReleaseData> => {\n    if (isUnderTest) {\n      return null;\n    }\n\n    this.logger.debug('Checking for new GitHub releases', { currentVersion });\n    const releases = await this.getGitHubReleases(\n      currentVersion,\n      options.includeCurrentVersion ?? false\n    );\n\n    if (releases.length === 0) {\n      return null;\n    }\n\n    const newestRelease = releases[0];\n    this.logger.debug('Newest available release', {\n      tag: newestRelease.tag_name,\n    });\n    return {\n      // Convert to a URL we can append a file name to\n      baseDownloadUrl: this.getBaseDownloadUrl(newestRelease),\n      changelog: this.getChangelog(releases),\n    };\n  };\n\n  private getGitHubReleases = async (\n    currentVersion: string,\n    includeCurrentVersion: boolean\n  ) => {\n    if (this.cachedReleases.length > 0) {\n      this.logger.debug('Returning cached releases', {\n        releases: this.cachedReleases,\n      });\n      return this.cachedReleases;\n    }\n\n    try {\n      const result = await this.octokit.rest.repos.listReleases(\n        ReleaseHelper.LYRICISTANT_REPO\n      );\n\n      for (const release of result.data) {\n        // latest tag is always a nightly build; don't upgrade to those.\n        if (release.tag_name === 'latest') {\n          continue;\n        }\n        if (\n          !includeCurrentVersion &&\n          !this.isReleaseNewerThanCurrent(currentVersion, release)\n        ) {\n          break;\n        }\n        if (release.assets.some((asset) => asset.name === 'latest.yml')) {\n          this.cachedReleases.push(release);\n        }\n      }\n\n      return this.cachedReleases;\n    } catch (e) {\n      this.logger.warn('Failed to load releases', e);\n      this.cachedReleases = [];\n      return this.cachedReleases;\n    }\n  };\n\n  private isReleaseNewerThanCurrent = (\n    currentVersion: string,\n    release: GitHubRelease\n  ): boolean => {\n    const current = semver.coerce(currentVersion);\n    const next = semver.coerce(release.tag_name);\n    if (!current || !next) {\n      this.logger.warn('Failed to compare versions', {\n        current,\n        next,\n        currentVersionString: currentVersion,\n        releaseTag: release.tag_name,\n      });\n      return false;\n    }\n    return semver.gt(next, current);\n  };\n\n  private getBaseDownloadUrl = (release: GitHubRelease) =>\n    this.removeFilename(release.assets[0].browser_download_url);\n\n  private getChangelog = (releases: GitHubRelease[]) =>\n    releases.reduce(\n      (changelog: string, release) =>\n        `##${release.name}\\n\\n${release.body}\\n\\n${changelog}`,\n      ''\n    );\n\n  /**\n   * Takes a URL in the form of https://example.com/path/file.txt and converts\n   * it to https://example.com/path/\n   */\n  private removeFilename = (url: string): string =>\n    url.substring(0, url.lastIndexOf('/') + 1);\n}\n","import {\n  ReleaseData,\n  ReleaseHelper,\n} from '@lyricistant/common/releases/ReleaseHelper';\nimport { assign, createMachine, EventObject } from 'xstate';\n\nlet releaseHelper: ReleaseHelper = null;\nconst lazyReleaseHelper = () => {\n  if (releaseHelper) {\n    return releaseHelper;\n  }\n  releaseHelper = new ReleaseHelper(logger);\n  return releaseHelper;\n};\n\ninterface LatestReleaseContext {\n  releaseData?: ReleaseData;\n  error?: any;\n}\n\ninterface LatestReleaseEvent extends EventObject {\n  type: 'INPUT';\n  currentVersion: string;\n}\n\nexport const latestReleaseMachine = createMachine<\n  LatestReleaseContext,\n  LatestReleaseEvent\n>({\n  id: 'latest-release',\n  initial: 'inactive',\n  context: {\n    releaseData: null,\n  },\n  on: {\n    INPUT: [\n      {\n        target: '.loading',\n      },\n    ],\n  },\n  states: {\n    inactive: {},\n    loading: {\n      invoke: {\n        src: async (_, event) =>\n          lazyReleaseHelper().getLatestDownloadableRelease(\n            event.currentVersion,\n            {\n              includeCurrentVersion: true,\n            }\n          ),\n        onDone: [\n          {\n            target: 'loaded',\n            cond: (context, event) => event.data != null,\n            actions: assign({\n              releaseData: (context, event) => event.data,\n            }),\n          },\n          { target: 'error' },\n        ],\n        onError: {\n          target: 'error',\n          actions: assign({\n            releaseData: () => null,\n          }),\n        },\n      },\n    },\n    loaded: {\n      id: 'loaded',\n    },\n    error: {\n      id: 'error',\n    },\n  },\n});\n","import { Release, supportedReleases } from '@lyricistant/renderer/download';\nimport { latestReleaseMachine } from '@lyricistant/renderer/download/LatestReleaseMachine';\nimport { APP_VERSION } from '@lyricistant/renderer/globals';\nimport { Android } from '@mui/icons-material';\nimport {\n  Accordion,\n  AccordionDetails,\n  AccordionSummary,\n  Box,\n  Button,\n  CircularProgress,\n  Dialog,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  Grid,\n} from '@mui/material';\nimport { useMachine } from '@xstate/react';\nimport { Apple, AppleIos, Linux, MicrosoftWindows } from 'mdi-material-ui';\nimport React, { useCallback, useEffect, useMemo } from 'react';\n\nconst releaseColor = ({ platform }: Release) => {\n  switch (platform) {\n    case 'Linux':\n      return '#0099cc';\n    case 'Android':\n      return '#3DDC84';\n    case 'Mac':\n    case 'iOS':\n      return '#555555';\n    case 'Windows':\n      return '#00A4EF';\n  }\n};\n\nconst PlatformDownloadOptions = (props: {\n  platform: string;\n  releases: Release[];\n  onClick: (release: Release) => void;\n}) => {\n  const children = useMemo(\n    () =>\n      props.releases.map((release) => (\n        <Grid\n          key={`${release.platform}/${release.asset}/${release.url}`}\n          item\n          xs={6}\n        >\n          <DownloadButton\n            release={release}\n            onClick={() => {\n              props.onClick(release);\n            }}\n          />\n        </Grid>\n      )),\n    [props.releases, props.onClick]\n  );\n\n  if (props.releases.length > 1) {\n    return (\n      <Grid\n        item\n        container\n        xs={12}\n        spacing={1}\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        <Grid item xs={12}>\n          <Accordion\n            key={props.platform + 'accordion'}\n            sx={{ padding: '0px', boxShadow: 'unset' }}\n          >\n            <AccordionSummary sx={{ padding: '0px' }}>\n              <Box padding={'8px'} width={'100%'}>\n                <Button\n                  sx={{\n                    background: releaseColor(props.releases[0]),\n                    color: releaseTextColor(props.releases[0]),\n                    textTransform: 'none',\n                  }}\n                  variant={'contained'}\n                  fullWidth\n                  startIcon={<ReleaseIcon platform={props.platform} />}\n                  size={'large'}\n                >\n                  {props.platform}\n                </Button>\n              </Box>\n            </AccordionSummary>\n            <AccordionDetails>\n              <Grid container>{children}</Grid>\n            </AccordionDetails>\n          </Accordion>\n        </Grid>\n      </Grid>\n    );\n  } else {\n    return <>{children}</>;\n  }\n};\n\nconst downloadLabel = ({\n  platform,\n  arch,\n}: {\n  platform: string;\n  arch?: string;\n}) => {\n  switch (platform) {\n    case 'Linux':\n      return `${platform} - ${arch}`;\n    case 'iOS':\n      return 'iPhone / iPad';\n    default:\n      return platform;\n  }\n};\n\nconst releaseTextColor = ({ platform }: Release) => {\n  switch (platform) {\n    case 'Mac':\n    case 'iOS':\n      return '#FFFFFF';\n    case 'Windows':\n    case 'Linux':\n    case 'Android':\n      return '#000000';\n  }\n};\n\nconst DownloadButton = (props: { release: Release; onClick?: () => void }) => {\n  const { release, onClick } = props;\n\n  return (\n    <Box padding={'8px'}>\n      <Button\n        sx={{\n          background: releaseColor(release),\n          color: releaseTextColor(release),\n          textTransform: 'none',\n        }}\n        variant={'contained'}\n        fullWidth\n        startIcon={<ReleaseIcon {...release} />}\n        size={'large'}\n        onClick={onClick}\n      >\n        {downloadLabel(release)}\n      </Button>\n    </Box>\n  );\n};\n\ninterface ChooseDownloadDialogProps {\n  open: boolean;\n  onClose: () => void;\n}\n\n/** A dialog that allows users to select and download different versions of Lyricistant. */\nexport const ChooseDownloadDialog = (props: ChooseDownloadDialogProps) => {\n  const [state, send] = useMachine(latestReleaseMachine);\n\n  useEffect(() => {\n    if (props.open) {\n      send({ type: 'INPUT', currentVersion: APP_VERSION });\n    }\n  }, [props.open]);\n\n  const onReleaseClicked = useCallback(\n    (release: Release) => {\n      const url =\n        release.url ??\n        state.context.releaseData.baseDownloadUrl + release.asset;\n      logger.info(`App download link clicked. Chosen URL: ${url}`);\n      window.open(url, '_blank');\n      props.onClose();\n    },\n    [state.context.releaseData?.baseDownloadUrl]\n  );\n\n  const releases = useMemo(\n    () =>\n      supportedReleases.reduce((map, release) => {\n        const list = map.get(release.platform) ?? [];\n        map.set(release.platform, [...list, release]);\n        return map;\n      }, new Map<string, Release[]>()),\n    []\n  );\n\n  return (\n    <Dialog\n      onClose={props.onClose}\n      aria-labelledby=\"choose-download-dialog-title\"\n      open={props.open}\n    >\n      <DialogTitle id=\"choose-download-dialog-title\">\n        Download Lyricistant\n      </DialogTitle>\n      <DialogContent>\n        {state.matches('loading') && (\n          <Box display={'flex'} alignItems={'center'} justifyContent={'center'}>\n            <CircularProgress size={'64px'} variant={'indeterminate'} />\n          </Box>\n        )}\n        {state.matches('loaded') && (\n          <DownloadButtons\n            releases={releases}\n            onReleaseClicked={onReleaseClicked}\n          />\n        )}\n        {state.matches('error') && (\n          <DialogContentText>\n            Failed to fetch latest download information. Please try again later.\n          </DialogContentText>\n        )}\n      </DialogContent>\n      <Button\n        size={'large'}\n        variant={'contained'}\n        fullWidth\n        onClick={props.onClose}\n      >\n        Close\n      </Button>\n    </Dialog>\n  );\n};\n\nconst DownloadButtons = (props: {\n  releases: Map<string, Release[]>;\n  onReleaseClicked: (release: Release) => void;\n}) => (\n  <Grid container spacing={1} alignItems={'center'} justifyContent={'center'}>\n    {[...props.releases.keys()].map((platform) => (\n      <PlatformDownloadOptions\n        key={platform}\n        platform={platform}\n        releases={props.releases.get(platform)}\n        onClick={(release) => props.onReleaseClicked(release)}\n      />\n    ))}\n  </Grid>\n);\n\nconst ReleaseIcon = ({ platform }: { platform: string }) => {\n  switch (platform) {\n    case 'Linux':\n      return <Linux />;\n    case 'Mac':\n      return <Apple />;\n    case 'Windows':\n      return <MicrosoftWindows />;\n    case 'Android':\n      return <Android />;\n    case 'iOS':\n      return <AppleIos />;\n  }\n};\n","import { useTheme, useMediaQuery } from '@mui/material';\n\n/**\n * A React hook that returns a boolean saying whether Lyricistant is using its\n * small, mobile friendly layout or not.\n *\n * @returns True if using small layout, false if not.\n */\nexport const useSmallLayout = (): boolean => {\n  const theme = useTheme();\n  return useMediaQuery(theme.breakpoints.down('md'));\n};\n","import {\n  PlatformToRendererListener,\n  RendererChannel,\n} from '@lyricistant/common/Delegates';\nimport { DependencyList, useEffect, useState } from 'react';\n\n/**\n * Register the provided listener on the given platform channel. The listener\n * will be invoked whenever the platform sends data to the given channel.\n *\n * @param channel Platform channel to listen to changes on.\n * @param listener Listener that will be invoked.\n * @param deps The dependencies that will be used to re-register the listener\n *   whenever they change. If not provided, listener will be re-registered\n *   whenever the React component is re-mounted. This differs from useEffect\n *   when no dependency list is provided, as useEffect would re-register on\n *   every render pass.\n */\nexport const useChannel: <Channel extends RendererChannel>(\n  channel: Channel,\n  listener: PlatformToRendererListener[Channel],\n  deps?: DependencyList\n) => void = (channel, listener, deps) => {\n  useEffect(() => {\n    platformDelegate.on(channel, listener);\n    return () => {\n      platformDelegate.removeListener(channel, listener);\n    };\n  }, deps ?? []);\n};\n\n/**\n * Returns the most recent data that that has been sent via this channel to the\n * renderer while this hook was running.\n *\n * Note: This will return an empty array initially, so while destructuring it\n * will work, all values will be undefined until this channel emits something.\n *\n * @param channel Platform channel to listen to changes on.\n * @param shouldRegister When this is true, will attempt to register. If this is\n *   false, it won't register. Useful for when the change of a dependency should\n *   re-register a listener on the platform, but only in certain situations,\n *   like to only register when a dialog is open.\n */\nexport const useChannelData: <Channel extends RendererChannel>(\n  channel: Channel,\n  shouldRegister?: boolean\n) => Parameters<PlatformToRendererListener[Channel]> = (\n  channel,\n  shouldRegister\n) => {\n  const [result, setResult] = useState([]);\n  useEffect(() => {\n    if (shouldRegister === false) {\n      return;\n    }\n    const listener = (...args: unknown[]) => {\n      setResult(args);\n    };\n    platformDelegate.on(channel, listener);\n    return () => {\n      platformDelegate.removeListener(channel, listener);\n    };\n  }, [shouldRegister]);\n  return result as any;\n};\n","import {\n  Chunk,\n  ChunkLine,\n  ParsedHistoryData,\n} from '@lyricistant/common/history/ParsedHistoryData';\nimport { useSmallLayout } from '@lyricistant/renderer/app/useSmallLayout';\nimport { useChannelData } from '@lyricistant/renderer/platform/useChannel';\nimport {\n  Box,\n  Button,\n  CircularProgress,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  Divider,\n  Drawer,\n  List,\n  ListItem,\n  ListItemText,\n  SxProps,\n  Theme,\n  useTheme,\n} from '@mui/material';\nimport React, { useCallback, useMemo, useState } from 'react';\n\ninterface FileHistoryItemProps {\n  data: ParsedHistoryData;\n  onClick: () => void;\n}\n\nconst FileHistoryItem = ({ data, onClick }: FileHistoryItemProps) => (\n  <ListItem button onClick={onClick}>\n    <ListItemText primary={data.time} />\n  </ListItem>\n);\n\ninterface FileHistoryProps {\n  open: boolean;\n  onClose: () => void;\n}\n\nconst VisualChunkLine = (props: { line: ChunkLine }) => {\n  const theme = useTheme();\n  const { backgroundColor, foregroundColor } = useMemo(() => {\n    if (props.line.type === 'new') {\n      return {\n        backgroundColor: theme.palette.success.main,\n        foregroundColor: theme.palette.success.contrastText,\n      };\n    } else if (props.line.type === 'old') {\n      return {\n        backgroundColor: theme.palette.error.main,\n        foregroundColor: theme.palette.error.contrastText,\n      };\n    }\n    return {};\n  }, [theme]);\n  const fontFamily = useMemo(() => {\n    if (props.line.control) {\n      return 'monospace';\n    }\n  }, [props.line.control]);\n\n  return (\n    <Box\n      sx={{\n        background: backgroundColor,\n        color: foregroundColor,\n        fontFamily,\n      }}\n    >\n      {props.line.line}\n    </Box>\n  );\n};\nconst VisualChunk = (props: { chunk: Chunk }) => (\n  <Box\n    marginBottom={'12px'}\n    padding={'12px'}\n    sx={{\n      border: 2,\n      borderRadius: 1,\n      borderColor: (theme: Theme) => theme.palette.divider,\n    }}\n  >\n    {props.chunk.lines.map((line, index) => (\n      <VisualChunkLine key={index} line={line} />\n    ))}\n  </Box>\n);\n\nconst FileHistoryList = (props: {\n  historyData: ParsedHistoryData[];\n  onFileHistoryClicked: (history: ParsedHistoryData) => void;\n}) => {\n  if (props.historyData?.length === 0) {\n    return <DialogContentText>No file history.</DialogContentText>;\n  }\n  if (!props.historyData) {\n    return (\n      <Box\n        width={'100%'}\n        display={'flex'}\n        justifyContent={'center'}\n        alignItems={'center'}\n      >\n        <CircularProgress size={'48px'} variant={'indeterminate'} />\n      </Box>\n    );\n  }\n  return (\n    <List>\n      {props.historyData.map((data, index) => (\n        <React.Fragment key={index}>\n          <FileHistoryItem\n            data={data}\n            onClick={() => {\n              props.onFileHistoryClicked(data);\n            }}\n          />\n          <Divider />\n        </React.Fragment>\n      ))}\n    </List>\n  );\n};\n/**\n * A dialog that displays file history from the platform and allows the user to\n * select a file history to apply.\n *\n * @param props The props needed to render this component.\n */\nexport function FileHistory(props: FileHistoryProps) {\n  const onClose = useCallback(() => {\n    setDisplayedHistory(null);\n    props.onClose();\n  }, []);\n\n  const [historyData] = useChannelData('file-history', props.open);\n  const [displayedHistory, setDisplayedHistory] =\n    useState<ParsedHistoryData>(null);\n\n  const anchor = useSmallLayout() ? 'bottom' : 'right';\n\n  const paperBounds: SxProps =\n    anchor === 'right'\n      ? { width: '35%', maxWidth: '400px' }\n      : { height: '50%', maxHeight: '500px' };\n\n  return (\n    <>\n      <Dialog\n        open={!!displayedHistory}\n        maxWidth={'md'}\n        onClose={() => setDisplayedHistory(null)}\n      >\n        <DialogTitle>{displayedHistory?.time}</DialogTitle>\n        <Divider />\n        <DialogContent>\n          {displayedHistory?.chunks.map((chunk, index) => (\n            <VisualChunk key={index} chunk={chunk} />\n          ))}\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setDisplayedHistory(null)}>Close</Button>\n          <Button\n            onClick={() => {\n              platformDelegate.send('apply-file-history', displayedHistory);\n              setDisplayedHistory(null);\n              onClose();\n            }}\n          >\n            Apply\n          </Button>\n        </DialogActions>\n      </Dialog>\n      <Drawer\n        onClose={onClose}\n        open={props.open}\n        anchor={anchor}\n        PaperProps={{ sx: paperBounds }}\n      >\n        <DialogTitle>File history</DialogTitle>\n        <Divider />\n        <DialogContent>\n          <FileHistoryList\n            historyData={historyData}\n            onFileHistoryClicked={setDisplayedHistory}\n          />\n        </DialogContent>\n      </Drawer>\n    </>\n  );\n}\n","import ReactMarkdown from 'markdown-to-jsx';\nimport React from 'react';\n\n/**\n * Renders text as markdown.\n *\n * @param text The text to render as markdown.\n */\nexport const Markdown: React.FC<{ text: string }> = ({ text }) => (\n  <ReactMarkdown children={text} options={{ disableParsingRawHTML: true }} />\n);\n","import {\n  AlertDialogData,\n  DialogData,\n  DialogInteractionData,\n  FullscreenDialogData,\n  SelectionDialogData,\n} from '@lyricistant/common/dialogs/Dialog';\nimport { Markdown } from '@lyricistant/renderer/markdown/Markdown';\nimport { useChannel } from '@lyricistant/renderer/platform/useChannel';\nimport { ExpandMore } from '@mui/icons-material';\nimport {\n  Accordion,\n  AccordionDetails,\n  AccordionSummary,\n  alpha,\n  Box,\n  Button,\n  Checkbox,\n  CircularProgress,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  FormControlLabel,\n  FormGroup,\n  Grow,\n  LinearProgress,\n  LinearProgressProps,\n  MenuItem,\n  Select,\n  Typography,\n} from '@mui/material';\nimport * as React from 'react';\nimport { useCallback, useEffect, useState } from 'react';\n\n/** Displays dialogs that the platform has requested to be shown. */\nexport function PlatformDialogs() {\n  const [dialogData, setDialogData] = useState<DialogData>(null);\n  const [closeDialogTag, setCloseDialogTag] = useState<string>(null);\n  const [open, setOpen] = useState(false);\n\n  const onDialogInteraction = useCallback(\n    (interactionData: DialogInteractionData) => {\n      setOpen(false);\n      platformDelegate.send(\n        'dialog-interaction',\n        dialogData.tag,\n        interactionData\n      );\n      platformDelegate.send('dialog-closed', dialogData.tag);\n    },\n    [dialogData]\n  );\n\n  const onClosed = useCallback(() => {\n    setOpen(false);\n    platformDelegate.send('dialog-closed', dialogData.tag);\n  }, [dialogData]);\n\n  useChannel('show-dialog', (data) => {\n    setDialogData(data);\n    setOpen(true);\n  });\n  useChannel('close-dialog', setCloseDialogTag);\n\n  useEffect(() => {\n    if (closeDialogTag && closeDialogTag === dialogData?.tag) {\n      setOpen(false);\n      setCloseDialogTag(null);\n      platformDelegate.send('dialog-closed', dialogData.tag);\n    }\n  }, [closeDialogTag, dialogData]);\n\n  if (!dialogData) {\n    return <div />;\n  }\n\n  if (dialogData.type === 'alert') {\n    return (\n      <AlertDialog\n        open={open}\n        dialogData={dialogData}\n        onDialogInteraction={onDialogInteraction}\n      />\n    );\n  } else if (dialogData.type === 'fullscreen') {\n    return (\n      <FullscreenDialog\n        open={open}\n        dialogData={dialogData}\n        onCancel={onClosed}\n      />\n    );\n  } else if (dialogData.type === 'selection') {\n    return (\n      <SelectionDialog\n        open={open}\n        dialogData={dialogData}\n        onDialogInteraction={onDialogInteraction}\n        onClosed={onClosed}\n      />\n    );\n  }\n}\n\nconst FullscreenDialog = ({\n  open,\n  dialogData,\n  onCancel,\n}: {\n  open: boolean;\n  dialogData: FullscreenDialogData;\n  onCancel: () => void;\n}) => (\n  <Dialog\n    open={open}\n    fullScreen\n    sx={{\n      overflow: 'none',\n    }}\n    TransitionComponent={Grow}\n    PaperProps={{\n      sx: {\n        backgroundColor: (theme) => alpha(theme.palette.background.paper, 0.5),\n      },\n    }}\n  >\n    <DialogContent\n      sx={{\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        flexDirection: 'column',\n        gap: '48px',\n      }}\n    >\n      {dialogData.message && (\n        <DialogContentText variant={'h5'}>\n          {dialogData.message}\n        </DialogContentText>\n      )}\n      {dialogData.progress &&\n        (dialogData.progress === 'indeterminate' ? (\n          <CircularProgress\n            size={'min(20vmin, 200px)'}\n            variant={'indeterminate'}\n          />\n        ) : (\n          <LinearProgressWithLabel value={dialogData.progress} />\n        ))}\n      {dialogData.cancelable && (\n        <Button variant={'outlined'} onClick={onCancel}>\n          Cancel\n        </Button>\n      )}\n    </DialogContent>\n  </Dialog>\n);\n\nconst AlertDialog = ({\n  open,\n  dialogData,\n  onDialogInteraction,\n}: {\n  open: boolean;\n  dialogData: AlertDialogData;\n  onDialogInteraction: (interactionData: DialogInteractionData) => void;\n}) => (\n  <Dialog\n    open={open}\n    sx={{\n      overflow: 'none',\n    }}\n  >\n    <DialogTitle>{dialogData.title}</DialogTitle>\n    <DialogContent>\n      {dialogData.message && (\n        <DialogContentText>{dialogData.message}</DialogContentText>\n      )}\n      {dialogData.collapsibleMessage && (\n        <Accordion elevation={0} square>\n          <AccordionSummary\n            expandIcon={<ExpandMore />}\n            sx={{\n              paddingLeft: '0px',\n              paddingRight: '0px',\n            }}\n          >\n            <DialogContentText>\n              {dialogData.collapsibleMessage.label}\n            </DialogContentText>\n          </AccordionSummary>\n          <AccordionDetails\n            sx={{\n              overflowY: 'auto',\n              wordBreak: 'break-word',\n              maxHeight: '300px',\n            }}\n          >\n            <DialogContentText>\n              <Markdown text={dialogData.collapsibleMessage.message} />\n            </DialogContentText>\n          </AccordionDetails>\n        </Accordion>\n      )}\n      {dialogData.progress && (\n        <LinearProgressWithLabel value={dialogData.progress} />\n      )}\n    </DialogContent>\n\n    {dialogData.buttons && (\n      <DialogActions>\n        {dialogData.buttons.map((label, index) => (\n          <Button\n            key={label}\n            onClick={() => onDialogInteraction({ selectedButton: label })}\n            color=\"primary\"\n            variant={\n              index === dialogData.buttons.length - 1 ? 'contained' : 'text'\n            }\n          >\n            {label}\n          </Button>\n        ))}\n      </DialogActions>\n    )}\n  </Dialog>\n);\n\nconst SelectionDialog = ({\n  open,\n  dialogData,\n  onDialogInteraction,\n  onClosed,\n}: {\n  open: boolean;\n  dialogData: SelectionDialogData;\n  onDialogInteraction: (interactionData?: DialogInteractionData) => void;\n  onClosed: () => void;\n}) => {\n  const [selection, setSelection] = useState<string>(dialogData.options[0]);\n  const [isChecked, setChecked] = useState(false);\n  return (\n    <Dialog open={open}>\n      <DialogTitle>{dialogData.title}</DialogTitle>\n      <DialogContent>\n        <p>\n          {dialogData.message && (\n            <DialogContentText>{dialogData.message}</DialogContentText>\n          )}\n        </p>\n        <Select\n          value={selection}\n          fullWidth\n          onChange={(event) => setSelection(event.target.value)}\n        >\n          {dialogData.options.map((option) => (\n            <MenuItem key={option} value={option}>\n              {option}\n            </MenuItem>\n          ))}\n        </Select>\n\n        {dialogData.checkbox && (\n          <FormGroup>\n            <FormControlLabel\n              control={\n                <Checkbox\n                  value={isChecked}\n                  onChange={(event) => {\n                    setChecked(event.target.checked);\n                  }}\n                />\n              }\n              label={dialogData.checkbox.label}\n            />\n          </FormGroup>\n        )}\n      </DialogContent>\n\n      <DialogActions>\n        <Button onClick={() => onClosed()} color=\"primary\" variant={'text'}>\n          Cancel\n        </Button>\n        <Button\n          onClick={() => {\n            onDialogInteraction({\n              selectedButton: 'Confirm',\n              selectedOption: selection,\n              checkboxes: {\n                [dialogData.checkbox.label]: isChecked,\n              },\n            });\n          }}\n          color=\"primary\"\n          variant={'contained'}\n        >\n          Confirm\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nconst LinearProgressWithLabel = (\n  props: LinearProgressProps & { value: number }\n) => (\n  <Box\n    display=\"flex\"\n    alignItems=\"center\"\n    paddingTop={'16px'}\n    paddingBottom={'16px'}\n    paddingLeft={'8px'}\n    paddingRight={'8px'}\n  >\n    <Box width=\"100%\" mr={1}>\n      <LinearProgress variant=\"determinate\" {...props} />\n    </Box>\n    <Box minWidth={35}>\n      <Typography variant=\"body2\" color=\"textSecondary\">{`${Math.round(\n        props.value\n      )}%`}</Typography>\n    </Box>\n  </Box>\n);\n","import {\n  ColorScheme as LyricistantTheme,\n  ColorScheme,\n  DefaultFileType,\n  DetailPaneVisibility,\n  Font,\n  RhymeSource,\n} from '@lyricistant/common/preferences/PreferencesData';\nimport { useChannelData } from '@lyricistant/renderer/platform/useChannel';\nimport {\n  Close as CloseIcon,\n  Info,\n  Save as SaveIcon,\n} from '@mui/icons-material';\nimport {\n  AppBar,\n  Box,\n  Button,\n  Container,\n  Dialog,\n  Divider,\n  FormControl,\n  IconButton,\n  InputLabel,\n  MenuItem,\n  Paper,\n  Select,\n  Slide,\n  SlideProps,\n  Toolbar,\n  Typography,\n} from '@mui/material';\nimport React, { useEffect, useState } from 'react';\n\nconst DialogTransition = React.forwardRef<unknown, SlideProps>(\n  function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n  }\n);\n\nconst Header = ({ label }: { label: string }) => (\n  <div>\n    <Typography sx={{ fontWeight: 'bolder' }} variant={'h6'}>\n      {label}\n    </Typography>\n    <Divider sx={{ marginTop: '2px' }} />\n  </div>\n);\n\ninterface LabeledValue<T> {\n  label: string;\n  value: T;\n}\n\ninterface SelectBoxProps<T> {\n  value: T;\n  onChange: (value: T) => void;\n  items: Array<LabeledValue<T>>;\n  label: string;\n}\n\nconst SelectBox = <T extends string | number>({\n  value,\n  onChange,\n  items,\n  label,\n}: SelectBoxProps<T>) => (\n  <FormControl variant=\"outlined\" fullWidth>\n    <InputLabel sx={{ marginLeft: '16px', marginRight: '16px' }}>\n      {label}\n    </InputLabel>\n    <Select\n      sx={{ marginLeft: '16px', marginRight: '16px' }}\n      value={value}\n      onChange={(e) => onChange(e.target.value as T)}\n      label={label}\n    >\n      {items.map(({ label: itemLabel, value: itemValue }) => (\n        <MenuItem key={itemLabel} value={itemValue}>\n          {itemLabel}\n        </MenuItem>\n      ))}\n    </Select>\n  </FormControl>\n);\n\n/** The props needed to render {@link Preferences}. */\ninterface PreferencesProps {\n  /** Whether the preferences dialog should show or not. */\n  open: boolean;\n  /** Invoked when the user closes the preferences dialog. */\n  onClose: () => void;\n  /** Invoked when the users wants to go to the About screen. */\n  onAboutClicked: () => void;\n}\n\n/**\n * A dialog that allows users to view and edit their preferences. Also allows\n * them to link to the About screen.\n *\n * @param props The props needed to render this component.\n */\nexport const Preferences = (props: PreferencesProps) => {\n  const [originalPreferenceData] = useChannelData('prefs-updated', props.open);\n  const [preferencesData, setPreferencesData] = useState(\n    originalPreferenceData\n  );\n\n  useEffect(() => {\n    setPreferencesData(originalPreferenceData);\n  }, [originalPreferenceData]);\n\n  const onDetailsSizeChanged = (textSize: number) => {\n    setPreferencesData({\n      ...preferencesData,\n      textSize,\n    });\n  };\n\n  const onColorSchemeChanged = (colorScheme: ColorScheme) => {\n    setPreferencesData({\n      ...preferencesData,\n      colorScheme,\n    });\n  };\n\n  const onRhymeSourceChanged = (rhymeSource: RhymeSource) => {\n    setPreferencesData({\n      ...preferencesData,\n      rhymeSource,\n    });\n  };\n\n  const onFontChanged = (font: Font) => {\n    setPreferencesData({\n      ...preferencesData,\n      font,\n    });\n  };\n\n  const onDefaultFileTypeChanged = (defaultFileType: DefaultFileType) => {\n    setPreferencesData({\n      ...preferencesData,\n      defaultFileType,\n    });\n  };\n\n  const onDetailPaneMinimizationChanged = (\n    detailPaneVisibility: DetailPaneVisibility\n  ) => {\n    setPreferencesData({\n      ...preferencesData,\n      detailPaneVisibility,\n    });\n  };\n\n  const onPreferencesSaved = () => {\n    platformDelegate.send('save-prefs', preferencesData);\n    props.onClose();\n  };\n\n  if (!preferencesData) {\n    return <div />;\n  }\n\n  return (\n    <Dialog\n      fullScreen\n      sx={{\n        color: (theme) => theme.palette.primary.contrastText,\n      }}\n      open={props.open}\n      TransitionComponent={DialogTransition}\n      PaperProps={{\n        sx: { background: (theme) => theme.palette.background.default },\n      }}\n    >\n      <AppBar color={'primary'} position=\"sticky\" enableColorOnDark>\n        <Toolbar>\n          <IconButton\n            color={'inherit'}\n            edge=\"start\"\n            onClick={props.onClose}\n            size=\"large\"\n          >\n            <CloseIcon />\n          </IconButton>\n          <Typography\n            variant=\"h6\"\n            sx={{ marginLeft: (theme) => theme.spacing(2), flex: 1 }}\n          >\n            Preferences\n          </Typography>\n          <IconButton\n            color={'inherit'}\n            onClick={onPreferencesSaved}\n            size=\"large\"\n            aria-label={'Save'}\n          >\n            <SaveIcon />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <Container maxWidth={'md'} sx={{ height: '100%' }}>\n        <Paper\n          sx={{\n            paddingTop: '32px',\n            paddingBottom: '32px',\n            paddingLeft: '32px',\n            paddingRight: '32px',\n          }}\n        >\n          <Box display={'flex'} flexDirection={'column'} gap={'24px'}>\n            <Header label={'Display'} />\n\n            <SelectBox\n              value={preferencesData.font}\n              onChange={onFontChanged}\n              items={[\n                { value: Font.Roboto_Mono, label: 'Roboto monospace' },\n                { value: Font.Roboto, label: 'Roboto' },\n              ]}\n              label={'Font'}\n            />\n\n            <SelectBox\n              value={preferencesData.textSize}\n              onChange={onDetailsSizeChanged}\n              items={[\n                { value: 8, label: '8' },\n                { value: 12, label: '12' },\n                { value: 16, label: '16 (Default)' },\n                { value: 20, label: '20' },\n                { value: 24, label: '24' },\n                { value: 28, label: '28' },\n              ]}\n              label={'Text size'}\n            />\n\n            <SelectBox\n              value={preferencesData.colorScheme}\n              onChange={onColorSchemeChanged}\n              items={[\n                { value: LyricistantTheme.Light, label: 'Light' },\n                { value: LyricistantTheme.Dark, label: 'Dark' },\n                {\n                  value: LyricistantTheme.System,\n                  label: 'Use device color scheme',\n                },\n              ]}\n              label={'Color scheme'}\n            />\n\n            <SelectBox\n              value={preferencesData.detailPaneVisibility}\n              onChange={onDetailPaneMinimizationChanged}\n              items={[\n                {\n                  value: DetailPaneVisibility.Toggleable,\n                  label: 'Show toggle button',\n                },\n                {\n                  value: DetailPaneVisibility.Always_Show,\n                  label: 'Always show',\n                },\n              ]}\n              label={'Detail pane visibility'}\n            />\n\n            <Header label={'Other'} />\n\n            <SelectBox\n              value={preferencesData.rhymeSource}\n              onChange={onRhymeSourceChanged}\n              items={[\n                { value: RhymeSource.Offline, label: 'Offline (alpha)' },\n                { value: RhymeSource.Datamuse, label: 'Datamuse' },\n              ]}\n              label={'Rhyme source'}\n            />\n\n            <SelectBox\n              value={preferencesData.defaultFileType}\n              onChange={onDefaultFileTypeChanged}\n              items={[\n                {\n                  value: DefaultFileType.Always_Ask,\n                  label: 'Always ask',\n                },\n                {\n                  value: DefaultFileType.Lyricistant_Lyrics,\n                  label: 'Lyricistant file (.lyrics)',\n                },\n                {\n                  value: DefaultFileType.Plain_Text,\n                  label: 'Plain text (.txt)',\n                },\n              ]}\n              label={'Default file type'}\n            />\n            <Button\n              variant={'text'}\n              startIcon={<Info />}\n              size={'large'}\n              onClick={props.onAboutClicked}\n              sx={{ flexGrow: 1 }}\n            >\n              About Lyricistant\n            </Button>\n          </Box>\n        </Paper>\n      </Container>\n    </Dialog>\n  );\n};\n","import {\n  Dialog,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n} from '@mui/material';\nimport React from 'react';\n\ninterface PrivacyPolicyProps {\n  onClose: () => void;\n  open: boolean;\n}\n\nexport const PrivacyPolicy = (props: PrivacyPolicyProps) => (\n  <Dialog onClose={props.onClose} open={props.open} className={'paper'}>\n    <DialogTitle>Privacy policy</DialogTitle>\n    <DialogContent>\n      <DialogContentText>\n        Lyricistant doesn't collect or store any data from you. Nothing. Nada.\n        Zilch. Zero.\n      </DialogContentText>\n    </DialogContent>\n  </Dialog>\n);\n","import { AboutDialog } from '@lyricistant/renderer/about/AboutDialog';\nimport {\n  RoutePaths,\n  useBackNavigation,\n  useNavigation,\n} from '@lyricistant/renderer/app/Navigation';\nimport { ChooseDownloadDialog } from '@lyricistant/renderer/download/ChooseDownloadDialog';\nimport { FileHistory } from '@lyricistant/renderer/filehistory/FileHistory';\nimport { PlatformDialogs } from '@lyricistant/renderer/platform/PlatformDialogs';\nimport { useChannel } from '@lyricistant/renderer/platform/useChannel';\nimport { Preferences } from '@lyricistant/renderer/preferences/Preferences';\nimport { PrivacyPolicy } from '@lyricistant/renderer/privacy/PrivacyPolicy';\nimport React, { ReactElement, useEffect } from 'react';\nimport { useLocation } from 'wouter';\n\ninterface ModalRouteProps {\n  path: RoutePaths;\n  render: (open: boolean) => ReactElement;\n}\n\nconst ModalRoute = ({ path, render }: ModalRouteProps) => {\n  const [location] = useLocation();\n  return <>{render(path.replace('/', '') === location)}</>;\n};\n\n/** Displays various models over Lyricistant based on the current router path. */\nexport function Modals() {\n  const navigate = useNavigation();\n  const goBack = useBackNavigation();\n\n  useEffect(() => {\n    logger.verbose('Navigation', location.pathname);\n  }, [location]);\n\n  useChannel('open-about', () => navigate('/about'), []);\n  useChannel('open-prefs', () => navigate('/preferences'), []);\n\n  return (\n    <>\n      <ModalRoute\n        path=\"/download\"\n        render={(open) => <ChooseDownloadDialog open={open} onClose={goBack} />}\n      />\n      <ModalRoute\n        path=\"/about\"\n        render={(open) => <AboutDialog open={open} onClose={goBack} />}\n      />\n      <ModalRoute\n        path=\"/privacypolicy\"\n        render={(open) => <PrivacyPolicy open={open} onClose={goBack} />}\n      />\n      <ModalRoute\n        path=\"/file-history\"\n        render={(open) => <FileHistory open={open} onClose={goBack} />}\n      />\n      <ModalRoute\n        path=\"/preferences\"\n        render={(open) => (\n          <Preferences\n            open={open}\n            onClose={goBack}\n            onAboutClicked={() => navigate('/about', { replace: true })}\n          />\n        )}\n      />\n      <PlatformDialogs />\n    </>\n  );\n}\n","import { ReactComponent as Logo } from '@lyricistant/renderer/lyricistant_logo.svg';\nimport { Box, Typography, useTheme } from '@mui/material';\nimport React from 'react';\n\n/**\n * Displays a \"null state text\" showing a message that should be displayed when\n * loading has failed or otherwise couldn't start.\n *\n * Displays the text and the icon of Lyricistant.\n *\n * @param text The text to display.\n * @param visible Whether this should be displayed. Useful for performance\n *   optimization; if this is meant to be displayed as a replacement for a list\n *   that could be expensive to render, having this always be rendered but\n *   hidden can help prevent re-renders.\n */\nexport const NullStateText = ({\n  text,\n  visible,\n}: {\n  text: string;\n  visible: boolean;\n}) => {\n  const theme = useTheme();\n\n  return (\n    <Box\n      height={'100%'}\n      width={'100%'}\n      overflow={'hidden'}\n      textOverflow={'ellipsis'}\n      fontStyle={'italic'}\n      p={'16px'}\n      display={visible === true ? 'flex' : 'none'}\n      flexWrap={'wrap-reverse'}\n      gap={'12px'}\n      alignItems={'center'}\n      justifyContent={'center'}\n      flexDirection={'column'}\n    >\n      <Logo height={'96px'} width={'96px'} fill={theme.palette.text.disabled} />\n      <Typography\n        sx={{\n          color: theme.palette.text.disabled,\n        }}\n        variant={'body1'}\n      >\n        {text}\n      </Typography>\n    </Box>\n  );\n};\n","import { Text } from '@codemirror/state';\nimport { isUnderTest } from '@lyricistant/common/BuildModes';\nimport { retext } from 'retext';\nimport retextIndefiniteArticle from 'retext-indefinite-article';\nimport retextRepeatedWords from 'retext-repeated-words';\nimport retextSpell, { Dictionary, VFile } from 'retext-spell';\nimport { VFileMessage } from 'vfile-message';\nimport { assign, createMachine, EventObject } from 'xstate';\n\nexport interface Diagnostic {\n  from: number;\n  to: number;\n  severity: 'info' | 'warning' | 'error';\n  message: string;\n  proposals?: string[];\n}\n\nconst backticksToQuotes = (value: string): string => value.replace(/`/g, '\"');\n\nconst toDisplayMessage = (report: VFileMessage): string => {\n  if (report.source === 'retext-spell') {\n    return `\"${report.actual}\" is misspelled`;\n  }\n  return backticksToQuotes(report.message);\n};\nconst toDiagnostics = (file: VFile, text: Text): Diagnostic[] =>\n  file.messages\n    .map((report): Diagnostic => {\n      const line = text.line(report.line);\n      const from = line.from + report.column - 1;\n      const to = report.position\n        ? line.from + report.position.end.column - 1\n        : from;\n\n      return {\n        from,\n        to,\n        severity: report.fatal ? 'error' : 'warning',\n        message: toDisplayMessage(report),\n        proposals: report.expected,\n      };\n    })\n    .sort((left, right) => left.from - right.from);\n\nconst loadDictionary: Dictionary = (callback) => {\n  let dic: unknown;\n  let aff: unknown;\n\n  new Promise(async (resolve) => {\n    dic = (await import('dictionary-en/index.dic')).default;\n    aff = (await import('dictionary-en/index.aff')).default;\n\n    resolve({ dic, aff });\n  })\n    .catch((e) => callback(e))\n    .then((result) => callback(null, result));\n};\nconst retextDiagnostics = async (text: Text | null): Promise<Diagnostic[]> => {\n  if (!text || text.length === 0) {\n    return [];\n  }\n\n  const result = await retext()\n    .use(retextSpell, loadDictionary)\n    .use(retextRepeatedWords)\n    .use(retextIndefiniteArticle)\n    .process(text.toString());\n\n  return toDiagnostics(result, text);\n};\n\nconst createDiagnostics = async (text: Text | null): Promise<Diagnostic[]> =>\n  retextDiagnostics(text);\n\ninterface DiagnosticsContext {\n  input?: Text;\n  result?: Diagnostic[];\n  error?: any;\n}\n\ninterface DiagnosticsEvent extends EventObject {\n  type: 'INPUT';\n  input: Text;\n}\n\nexport const diagnosticsMachine = createMachine<\n  DiagnosticsContext,\n  DiagnosticsEvent\n>(\n  {\n    id: 'diagnostics',\n    initial: 'waiting',\n    context: {\n      result: [],\n    },\n    on: {\n      INPUT: [\n        {\n          target: 'loading',\n          cond: 'isValidInput',\n          actions: [\n            assign({ input: (context, event) => event.input }),\n            assign({ result: [] }),\n          ],\n        },\n      ],\n    },\n    states: {\n      waiting: {\n        id: 'waiting',\n      },\n      loading: {\n        initial: 'debouncing',\n        states: {\n          debouncing: {\n            on: {\n              INPUT: [\n                {\n                  target: 'debouncing',\n                  cond: 'isValidInput',\n                  actions: [\n                    assign({ input: (context, event) => event.input }),\n                    assign({ result: [] }),\n                  ],\n                },\n                { target: '#diagnostics.waiting' },\n              ],\n            },\n            after: [\n              {\n                delay: 'DEBOUNCE',\n                target: 'active',\n              },\n            ],\n          },\n          active: {\n            invoke: {\n              src: async (context) => createDiagnostics(context.input),\n              onDone: [\n                {\n                  target: '#displaying',\n                  cond: (context, event) =>\n                    Array.isArray(event.data) && event.data.length > 0,\n                  actions: assign({\n                    result: (context, event) => event.data,\n                  }),\n                },\n                {\n                  target: '#no-results',\n                  actions: assign({\n                    result: (context, event) => event.data ?? [],\n                  }),\n                },\n              ],\n              onError: {\n                target: '#no-results',\n                actions: [\n                  assign({\n                    error: (context, event) => event.data,\n                    result: [],\n                  }),\n                  (context) =>\n                    logger.warn(\n                      `Failed to load diagnostics for text`,\n                      context.error\n                    ),\n                ],\n              },\n            },\n          },\n        },\n      },\n      displaying: {\n        id: 'displaying',\n      },\n      'no-results': {\n        id: 'no-results',\n      },\n    },\n  },\n  {\n    delays: {\n      DEBOUNCE: () => (isUnderTest ? 100 : 1_000),\n    },\n    guards: {\n      isValidInput: (context, event) => context.input !== event.input,\n    },\n  }\n);\n","import { Text } from '@codemirror/state';\nimport { DetailPaneChildProps } from '@lyricistant/renderer/detail/DetailPane';\nimport { NullStateText } from '@lyricistant/renderer/detail/NullStateText';\nimport {\n  Diagnostic,\n  diagnosticsMachine,\n} from '@lyricistant/renderer/diagnostics/DiagnosticsMachine';\nimport { Markdown } from '@lyricistant/renderer/markdown/Markdown';\nimport { ChevronRight } from '@mui/icons-material';\nimport {\n  Box,\n  IconButton,\n  List,\n  ListItem,\n  ListItemButton,\n  ListItemSecondaryAction,\n  ListItemText,\n  Paper,\n  Popover,\n  useTheme,\n} from '@mui/material';\nimport { useMachine } from '@xstate/react';\nimport React, { useEffect } from 'react';\n\nexport interface DiagnosticsPanelProps extends DetailPaneChildProps {\n  text: Text;\n  onDiagnosticsLoaded: (diagnostics: Diagnostic[]) => void;\n  onDiagnosticClicked: (value: Diagnostic) => void;\n  onProposalAccepted: (proposal: string, diagnostic: Diagnostic) => void;\n}\n\nexport const Diagnostics = (props: DiagnosticsPanelProps) => {\n  const [state, send] = useMachine(diagnosticsMachine);\n\n  useEffect(() => {\n    if (props.isVisible) {\n      send({ type: 'INPUT', input: props.text });\n    }\n  }, [props.text, props.isVisible]);\n\n  useEffect(() => {\n    props.onLoadingChanged?.(state.matches('loading'));\n  }, [state.matches('loading')]);\n\n  const diagnostics: Diagnostic[] = state.context.result;\n\n  useEffect(() => {\n    props.onDiagnosticsLoaded(props.isVisible ? diagnostics : []);\n  }, [props.isVisible, diagnostics]);\n\n  return (\n    <Box\n      display={'flex'}\n      flexDirection={'column'}\n      gap={diagnostics.length > 0 ? '8px' : '0px'}\n      height={'100%'}\n      width={'100%'}\n    >\n      <NullStateText\n        visible={state.matches('waiting')}\n        text={'Waiting for lyrics'}\n      />\n\n      <NullStateText\n        visible={state.matches('no-results')}\n        text={'No issues found'}\n      />\n\n      {diagnostics.length > 0 && (\n        <DiagnosticsList\n          diagnostics={diagnostics}\n          onDiagnosticClicked={props.onDiagnosticClicked}\n          onProposalAccepted={props.onProposalAccepted}\n        />\n      )}\n    </Box>\n  );\n};\n\nconst DiagnosticsList = (props: {\n  diagnostics: Diagnostic[];\n  onDiagnosticClicked: (diagnostic: Diagnostic) => void;\n  onProposalAccepted: (proposal: string, diagnostic: Diagnostic) => void;\n}) => (\n  <List>\n    {props.diagnostics.map((diagnostic) => (\n      <DiagnosticRow\n        key={JSON.stringify(diagnostic)}\n        diagnostic={diagnostic}\n        onClick={() => props.onDiagnosticClicked(diagnostic)}\n        onProposalClicked={(proposal) =>\n          props.onProposalAccepted(proposal, diagnostic)\n        }\n      />\n    ))}\n  </List>\n);\n\nconst DiagnosticRow = (props: {\n  diagnostic: Diagnostic;\n  onClick: () => void;\n  onProposalClicked: (proposal: string) => void;\n}) => {\n  const theme = useTheme();\n  return (\n    <ListItem disablePadding onClick={props.onClick}>\n      <ListItemButton\n        divider\n        sx={{\n          ':hover': {\n            backgroundColor: theme.palette.background.paper,\n          },\n        }}\n      >\n        <ListItemText\n          sx={{\n            paddingRight: '8px',\n          }}\n          primary={<Markdown text={props.diagnostic.message} />}\n        />\n        <ListItemSecondaryAction>\n          <IconButton onClick={props.onClick}>\n            <ChevronRight />\n          </IconButton>\n        </ListItemSecondaryAction>\n      </ListItemButton>\n    </ListItem>\n  );\n};\n\ninterface DiagnosticActionPopoverProps {\n  diagnostic?: Diagnostic;\n  domRect?: DOMRect;\n  onClose: () => void;\n  onProposalAccepted: (proposal: string, diagnostic: Diagnostic) => void;\n}\n\nexport const DiagnosticActionPopover = (\n  props: DiagnosticActionPopoverProps\n) => (\n  <Popover\n    open={props.diagnostic?.proposals?.length > 0}\n    onClose={props.onClose}\n    anchorEl={\n      props.domRect && {\n        getBoundingClientRect: () => props.domRect,\n        nodeType: 1,\n      }\n    }\n    anchorOrigin={{\n      vertical: 'center',\n      horizontal: 'center',\n    }}\n  >\n    <Paper>\n      <DiagnosticActionPopoverContent\n        diagnostic={props.diagnostic}\n        onProposalAccepted={props.onProposalAccepted}\n      />\n    </Paper>\n  </Popover>\n);\n\ninterface DiagnosticActionPopoverContentProps {\n  diagnostic: Diagnostic;\n  onProposalAccepted: (proposal: string, diagnostic: Diagnostic) => void;\n}\n\nconst DiagnosticActionPopoverContent = (\n  props: DiagnosticActionPopoverContentProps\n) => (\n  <List dense>\n    {(props.diagnostic?.proposals?.slice(0, 6) ?? []).map((proposal) => (\n      <ListItem\n        disablePadding\n        dense\n        onClick={() => {\n          props.onProposalAccepted(proposal, props.diagnostic);\n        }}\n      >\n        <ListItemButton dense>\n          <ListItemText>{proposal}</ListItemText>\n        </ListItemButton>\n      </ListItem>\n    ))}\n  </List>\n);\n","import { Box } from '@mui/material';\nimport React from 'react';\n\nexport const ListSpacer = () => <Box sx={{ width: '100%', height: '8px' }} />;\n","import { Chip } from '@mui/material';\nimport React from 'react';\n\n/** The props needed to render {@link WordChip} */\ninterface WordChipProps {\n  /** The word to display. */\n  word: string;\n  /** Invoked when this button is clicked. */\n  onClick: () => void;\n}\n\n/**\n * A \"chip\" that displays a word that can be clicked.\n *\n * @param props The props needed to render {@link WordChip}\n */\nexport const WordChip = ({ word, onClick }: WordChipProps) => (\n  <Chip style={{ flex: '1 1 auto' }} onClick={onClick} label={word} />\n);\n","import { isUnderTest } from '@lyricistant/common/BuildModes';\nimport axios from 'axios';\nimport { flattenDeep, uniq } from 'lodash-es';\nimport { assign, createMachine, EventObject } from 'xstate';\n\nexport interface DefinitionsResponse {\n  meanings: Meaning[];\n}\n\nexport interface Meaning {\n  partOfSpeech: string;\n  definitions: Definition[];\n  synonyms: string[];\n  antonyms: string[];\n}\n\nexport interface Definition {\n  definition: string;\n  example: string;\n  synonyms: string[];\n  antonyms: string[];\n}\ninterface DictionaryContext {\n  input?: string;\n  inputForResult?: string;\n  result?: Meaning[];\n  error?: any;\n}\n\ninterface DictionaryEvent extends EventObject {\n  type: 'INPUT';\n  input: string;\n}\n\nconst fetchDefinition = async (input: string): Promise<Meaning[]> => {\n  logger.verbose(`Fetching definition for \"${input}`);\n  return axios\n    .get<DefinitionsResponse[]>(input, {\n      baseURL: 'https://api.dictionaryapi.dev/api/v2/entries/en/',\n    })\n    .then((response) => response.data[0].meanings);\n};\n\n/**\n * Giving a list of meanings, normalize the synonyms and antonyms so they appear\n * as separate words.\n *\n * Sometimes, the API will return related words in a single string like \"hello,\n * world\" instead of a string array like [\"hello\", \"world\"]. This fixes that.\n *\n * @param meanings The meanings potentially contained related words that need to\n *   be normalized.\n */\nconst normalize = (meanings: Meaning[]): Meaning[] =>\n  meanings.map((meaning) => ({\n    ...meaning,\n    definitions: meaning.definitions.map((definition) => ({\n      ...definition,\n      synonyms: uniq(\n        flattenDeep(\n          definition.synonyms.map((synonym) =>\n            synonym.split(',').map((value) => value.trim())\n          )\n        )\n      ),\n      antonyms: uniq(\n        flattenDeep(\n          definition.antonyms.map((antonym) =>\n            antonym.split(',').map((value) => value.trim())\n          )\n        )\n      ),\n    })),\n  }));\n\nexport const dictionaryMachine = createMachine<\n  DictionaryContext,\n  DictionaryEvent\n>(\n  {\n    id: 'dictionary',\n    initial: 'waiting',\n    context: {\n      result: [],\n    },\n    on: {\n      INPUT: [\n        {\n          target: 'loading',\n          cond: 'isValidInput',\n          actions: assign({\n            input: (context, event) => event.input,\n          }),\n        },\n      ],\n    },\n    states: {\n      waiting: {\n        id: 'waiting',\n      },\n      loading: {\n        initial: 'debouncing',\n        states: {\n          debouncing: {\n            on: {\n              INPUT: [\n                {\n                  target: 'debouncing',\n                  cond: 'isValidInput',\n                  actions: assign({\n                    input: (context, event) => event.input,\n                  }),\n                },\n                { target: '#dictionary.waiting' },\n              ],\n            },\n            after: [\n              {\n                delay: 'DEBOUNCE',\n                target: 'active',\n              },\n            ],\n          },\n          active: {\n            invoke: {\n              src: async (context) => fetchDefinition(context.input),\n              onDone: [\n                {\n                  target: '#displaying',\n                  cond: (context, event) =>\n                    Array.isArray(event.data) && event.data.length > 0,\n                  actions: assign({\n                    inputForResult: (context) => context.input,\n                    result: (context, event) => normalize(event.data),\n                  }),\n                },\n                {\n                  target: '#no-results',\n                  actions: assign({\n                    result: (context, event) => event.data ?? [],\n                  }),\n                },\n              ],\n              onError: {\n                target: '#no-results',\n                actions: [\n                  assign({\n                    error: (context, event) => event.data,\n                    result: [],\n                  }),\n                  (context) =>\n                    logger.warn(\n                      `Failed to load definition for ${context.input}`\n                    ),\n                ],\n              },\n            },\n          },\n        },\n      },\n      displaying: {\n        id: 'displaying',\n      },\n      'no-results': {\n        id: 'no-results',\n      },\n    },\n  },\n  {\n    delays: {\n      DEBOUNCE: () => (isUnderTest ? 100 : 1_000),\n    },\n    guards: {\n      isValidInput: (context, event) =>\n        event.input &&\n        event.input.trim().length > 0 &&\n        !!event.input.match(/\\w+/) &&\n        event.input !== context.input,\n    },\n  }\n);\n","import { DetailPaneChildProps } from '@lyricistant/renderer/detail/DetailPane';\nimport { ListSpacer } from '@lyricistant/renderer/detail/ListSpacer';\nimport { NullStateText } from '@lyricistant/renderer/detail/NullStateText';\nimport { WordChip } from '@lyricistant/renderer/detail/WordChip';\nimport {\n  Definition,\n  dictionaryMachine,\n  Meaning,\n} from '@lyricistant/renderer/dictionary/DictionaryMachine';\nimport { Box, Divider, Typography } from '@mui/material';\nimport { useMachine } from '@xstate/react';\nimport React, { useEffect, useMemo } from 'react';\n\nexport interface DictionaryProps extends DetailPaneChildProps {\n  query?: string;\n  onRelatedTextClicked: (text: string) => void;\n}\nexport const Dictionary = ({\n  query,\n  onRelatedTextClicked,\n  isVisible,\n  onLoadingChanged,\n}: DictionaryProps) => {\n  const [state, send] = useMachine(dictionaryMachine);\n\n  useEffect(() => {\n    if (isVisible && query) {\n      send({ type: 'INPUT', input: query });\n    }\n  }, [query, isVisible]);\n\n  useEffect(() => {\n    onLoadingChanged?.(state.matches('loading'));\n  }, [state.matches('loading')]);\n\n  const meanings: Meaning[] = state.context.result;\n\n  return (\n    <Box\n      display={'flex'}\n      flexDirection={'column'}\n      gap={'8px'}\n      height={'100%'}\n      width={'100%'}\n    >\n      <NullStateText\n        visible={state.matches('waiting')}\n        text={'Waiting for lyrics'}\n      />\n\n      <NullStateText\n        visible={state.matches('no-results')}\n        text={'No definition found'}\n      />\n\n      {meanings.length > 0 && (\n        <MeaningList\n          query={state.context.inputForResult}\n          meanings={meanings}\n          onRelatedTextClicked={onRelatedTextClicked}\n        />\n      )}\n    </Box>\n  );\n};\n\nconst MeaningList = React.memo(\n  (props: {\n    query: string;\n    meanings: Meaning[];\n    onRelatedTextClicked: (word: string) => void;\n  }) => (\n    <Box sx={{ overflow: 'auto', paddingLeft: '16px', paddingRight: '16px' }}>\n      <ListSpacer />\n      <Typography variant={'h5'}>{props.query}</Typography>\n      <Box sx={{ display: 'flex', flexDirection: 'column', gap: '16px' }}>\n        {props.meanings.map((meaning, index) => (\n          <React.Fragment key={JSON.stringify(meaning)}>\n            <VisualMeaning\n              meaning={meaning}\n              onRelatedTextClicked={props.onRelatedTextClicked}\n            />\n            {(meaning.synonyms?.length > 0 || meaning.antonyms?.length > 0) && (\n              <Divider variant={'middle'}>\n                <Typography variant={'caption'}>Related</Typography>\n              </Divider>\n            )}\n            <RelatedTextLists\n              disablePadding\n              synonyms={meaning.synonyms}\n              antonyms={meaning.antonyms}\n              onRelatedTextClicked={props.onRelatedTextClicked}\n            />\n            {index < props.meanings.length - 1 && (\n              <Divider variant={'fullWidth'} />\n            )}\n          </React.Fragment>\n        ))}\n      </Box>\n      <ListSpacer />\n    </Box>\n  )\n);\n\nconst VisualMeaning = (props: {\n  meaning: Meaning;\n  onRelatedTextClicked: (word: string) => void;\n}) => (\n  <Box display={'flex'} flexDirection={'column'} gap={'8px'}>\n    <Typography variant={'subtitle1'} sx={{ fontWeight: 'bold' }}>\n      {props.meaning.partOfSpeech}\n    </Typography>\n    {props.meaning.definitions.map((definition, index) => (\n      <VisualDefinition\n        showHeader={props.meaning.definitions.length > 1}\n        key={index}\n        index={index + 1}\n        definition={definition}\n        onRelatedTextClicked={props.onRelatedTextClicked}\n      />\n    ))}\n  </Box>\n);\n\nconst VisualDefinition = ({\n  index,\n  definition,\n  showHeader,\n  onRelatedTextClicked,\n}: {\n  index: number;\n  showHeader: boolean;\n  definition: Definition;\n  onRelatedTextClicked: (word: string) => void;\n}) => (\n  <Box>\n    {showHeader && (\n      <Divider\n        variant={'middle'}\n        sx={{\n          paddingTop: '4px',\n          paddingBottom: '4px',\n        }}\n      >\n        <Typography variant={'caption'}>{index}</Typography>\n      </Divider>\n    )}\n    <Typography>{definition.definition}</Typography>\n    {definition.example?.trim()?.length > 0 && (\n      <Typography variant={'body2'} sx={{ fontStyle: 'italic' }}>\n        {definition.example}\n      </Typography>\n    )}\n    <RelatedTextLists\n      synonyms={definition.synonyms}\n      antonyms={definition.antonyms}\n      onRelatedTextClicked={onRelatedTextClicked}\n    />\n  </Box>\n);\n\nconst RelatedTextLists = (props: {\n  disablePadding?: boolean;\n  synonyms: string[];\n  antonyms: string[];\n  onRelatedTextClicked: (word: string) => void;\n}) => {\n  const shouldHide = useMemo(\n    () => !(props.antonyms?.length > 0 || props.synonyms?.length > 0),\n    [props.synonyms, props.antonyms]\n  );\n  const synonyms = useMemo(\n    () => [...new Set(props.synonyms)],\n    [props.synonyms]\n  );\n  const antonyms = useMemo(\n    () => [...new Set(props.antonyms)],\n    [props.antonyms]\n  );\n  const hasSynonyms = synonyms.length > 0;\n  const hasAntonyms = antonyms.length > 0;\n  return (\n    <Box\n      sx={{\n        padding: props.disablePadding ? undefined : '4px',\n        display: shouldHide ? 'none' : undefined,\n      }}\n    >\n      {hasSynonyms && (\n        <RelatedText\n          label={hasAntonyms ? 'Synonyms' : null}\n          words={synonyms}\n          onRelatedTextClicked={props.onRelatedTextClicked}\n        />\n      )}\n      {hasSynonyms && hasAntonyms && <Box height={'8px'} />}\n      {hasAntonyms && (\n        <RelatedText\n          label={'Antonyms'}\n          words={antonyms}\n          onRelatedTextClicked={props.onRelatedTextClicked}\n        />\n      )}\n    </Box>\n  );\n};\n\nconst RelatedText = (props: {\n  label?: string;\n  words: string[];\n  onRelatedTextClicked: (word: string) => void;\n}) => (\n  <>\n    {props.label && (\n      <Typography\n        variant={'subtitle2'}\n        sx={{ paddingBottom: '4px', fontSize: 'italic' }}\n      >\n        {props.label}\n      </Typography>\n    )}\n    <Box display={'flex'} flexWrap={'wrap'} flexDirection={'row'} gap={'4px'}>\n      {props.words.map((word) => (\n        <WordChip\n          key={word}\n          word={word}\n          onClick={() => props.onRelatedTextClicked(word)}\n        />\n      ))}\n    </Box>\n  </>\n);\n","export class Rhyme {\n  public word: string;\n  public score: number;\n\n  public constructor(word: string, score: number) {\n    this.word = word;\n    this.score = score;\n  }\n}\n","import { Rhyme } from './rhyme';\n\nconst url = 'https://lyricistant.wardellbagby.workers.dev';\ntype RhymeType = 'perfect' | 'near' | 'sounds-like';\n\nconst getMaxRhymeCount = (type: RhymeType) => {\n  if (type === 'perfect') {\n    return 50;\n  } else {\n    return 25;\n  }\n};\nconst asyncRhymes = async (word: string, type: RhymeType): Promise<Rhyme[]> => {\n  let param;\n  switch (type) {\n    case 'perfect':\n      param = 'rel_rhy';\n      break;\n    case 'near':\n      param = 'rel_nry';\n      break;\n    case 'sounds-like':\n      param = 'sl';\n      break;\n  }\n\n  logger.debug(`Fetching ${type} rhymes for word: ${word}`);\n  const response = await fetch(\n    `${url}/words?${param}=${word}&max=${getMaxRhymeCount(type)}`\n  );\n\n  if (response.ok && response.status < 400) {\n    const text = await response.text();\n    logger.debug(`Response for ${type} and ${word}`, text);\n    try {\n      return JSON.parse(text);\n    } catch (e) {\n      logger.error(\"Couldn't parse rhymes response to JSON!\", word, text);\n      return [];\n    }\n  }\n  logger.error(\n    'Failed to fetch rhymes! Returning an empty list.',\n    word,\n    response\n  );\n  return [];\n};\n\n/**\n * Fetch rhymes for the given word from the Datamuse rhymes API.\n *\n * @param word The word to find rhymes for.\n */\nexport const fetchRhymes = async (word: string): Promise<Rhyme[]> => {\n  if (word.length === 0) {\n    return [];\n  }\n\n  return Promise.all([\n    asyncRhymes(word, 'perfect').then((rhymes) => increaseScore(rhymes, 10000)),\n    asyncRhymes(word, 'near').then((rhymes) => increaseScore(rhymes, 1000)),\n    asyncRhymes(word, 'sounds-like'),\n  ]).then((results) =>\n    distinct(flatten(results), (rhyme) => rhyme.word).sort(\n      (left: Rhyme, right: Rhyme) => right.score - left.score\n    )\n  );\n};\n\nconst increaseScore = (rhymes: Rhyme[], amount: number) =>\n  rhymes.map((rhyme: Rhyme) => new Rhyme(rhyme.word, rhyme.score + amount));\n\nconst flatten: <T>(input: T[][]) => T[] = (array) =>\n  array.reduce((prev, current) => prev.concat(current));\n\nconst distinct: <T, R>(input: T[], by: (value: T) => R) => T[] = (\n  input,\n  by\n) => {\n  const map = new Map();\n  const results = [];\n  for (const item of input) {\n    if (!map.has(by(item))) {\n      map.set(by(item), true);\n      results.push(item);\n    }\n  }\n  return results;\n};\n","import { isUnderTest } from '@lyricistant/common/BuildModes';\nimport { RhymeSource } from '@lyricistant/common/preferences/PreferencesData';\nimport { fetchRhymes as datamuseRhymes } from '@lyricistant/renderer/rhymes/datamuse';\nimport { Rhyme } from '@lyricistant/renderer/rhymes/rhyme';\nimport { assign, createMachine, EventObject } from 'xstate';\n\ntype generateRhymes =\n  typeof import('@lyricistant/rhyme-generator')['rhymeGenerator']['generateRhymes'];\n\nconst offlineRhymes = (...args: Parameters<generateRhymes>) =>\n  import('@lyricistant/rhyme-generator').then(({ rhymeGenerator }) =>\n    rhymeGenerator.generateRhymes(...args)\n  );\n\ninterface RhymesContext {\n  rhymeSource?: RhymeSource;\n  input?: string;\n  rhymes: Rhyme[];\n  error?: any;\n}\n\ninterface RhymesEvent extends EventObject {\n  type: 'INPUT';\n  input: string;\n  rhymeSource: RhymeSource;\n}\n\nconst fetchRhymes = async (\n  input: string,\n  rhymeSource: RhymeSource\n): Promise<Rhyme[]> => {\n  let results: Rhyme[];\n  switch (rhymeSource) {\n    case RhymeSource.Offline:\n      results = await offlineRhymes(input);\n      break;\n    case RhymeSource.Datamuse:\n      try {\n        results = await datamuseRhymes(input);\n      } catch (e) {\n        logger.warn(\n          'Failed to fetch Datamuse rhymes; falling back to offline',\n          e\n        );\n        results = await offlineRhymes(input);\n      }\n      break;\n  }\n\n  return results.filter((rhyme) => rhyme && rhyme.word && rhyme.score);\n};\n\n/** A State Machine that handles fetching rhymes based on a query and returning a result. */\nexport const rhymesMachine = createMachine<RhymesContext, RhymesEvent>(\n  {\n    id: 'rhymes',\n    initial: 'inactive',\n    context: {\n      rhymes: [],\n    },\n    on: {\n      INPUT: [\n        {\n          target: '.loading',\n          cond: 'isValidInput',\n          actions: assign({\n            input: (context, event) => event.input,\n            rhymeSource: (context, event) => event.rhymeSource,\n          }),\n        },\n      ],\n    },\n    states: {\n      inactive: {\n        id: '#inactive',\n      },\n      loading: {\n        initial: 'debouncing',\n        states: {\n          debouncing: {\n            on: {\n              INPUT: [\n                {\n                  target: 'debouncing',\n                  cond: 'isValidInput',\n                  actions: assign({\n                    input: (context, event) => event.input,\n                    rhymeSource: (context, event) => event.rhymeSource,\n                  }),\n                },\n                { target: '#rhymes.inactive' },\n              ],\n            },\n            after: [\n              {\n                delay: 'DEBOUNCE',\n                target: 'active',\n              },\n            ],\n          },\n          active: {\n            invoke: {\n              id: 'fetch-rhymes',\n              src: async (context) =>\n                fetchRhymes(context.input, context.rhymeSource),\n              onDone: [\n                {\n                  target: '#displaying',\n                  cond: (context, event) =>\n                    Array.isArray(event.data) && event.data.length > 0,\n                  actions: assign({\n                    rhymes: (context, event) => event.data,\n                  }),\n                },\n                {\n                  target: '#no-results',\n                  actions: assign({\n                    rhymes: (context, event) => event.data,\n                  }),\n                },\n              ],\n              onError: {\n                target: '#error',\n                actions: assign({\n                  error: (context, event) => event.data,\n                }),\n              },\n            },\n          },\n        },\n      },\n      displaying: {\n        id: 'displaying',\n      },\n      'no-results': {\n        id: 'no-results',\n      },\n      error: {\n        id: 'error',\n      },\n    },\n  },\n  {\n    delays: {\n      DEBOUNCE: () => (isUnderTest ? 100 : 1_000),\n    },\n    guards: {\n      isValidInput: (context, event) =>\n        context.input !== event.input ||\n        context.rhymeSource !== event.rhymeSource,\n    },\n  }\n);\n","import { DetailPaneChildProps } from '@lyricistant/renderer/detail/DetailPane';\nimport { ListSpacer } from '@lyricistant/renderer/detail/ListSpacer';\nimport { NullStateText } from '@lyricistant/renderer/detail/NullStateText';\nimport { WordChip } from '@lyricistant/renderer/detail/WordChip';\nimport { useChannelData } from '@lyricistant/renderer/platform/useChannel';\nimport { rhymesMachine } from '@lyricistant/renderer/rhymes/RhymesMachine';\nimport { Box } from '@mui/material';\nimport { useMachine } from '@xstate/react';\nimport React, { useCallback, useEffect, useLayoutEffect } from 'react';\nimport { useErrorHandler } from 'react-error-boundary';\nimport { Rhyme } from './rhyme';\n\ninterface RhymesListProps {\n  rhymes: Rhyme[];\n  onRhymeClicked: (rhyme: Rhyme) => void;\n}\n\nconst RhymesListItem = ({\n  rhyme,\n  onRhymeClicked,\n}: {\n  rhyme: Rhyme;\n  onRhymeClicked: (rhyme: Rhyme) => void;\n}) => {\n  const onClick = useCallback(() => {\n    onRhymeClicked(rhyme);\n  }, [rhyme, onRhymeClicked]);\n  return <WordChip word={rhyme.word} key={rhyme.word} onClick={onClick} />;\n};\nconst RhymesList = React.memo(({ rhymes, onRhymeClicked }: RhymesListProps) => (\n  <Box\n    display={rhymes.length > 0 ? 'flex' : 'none'}\n    flexWrap={'wrap'}\n    gap={'4px'}\n    alignContent={'start'}\n    flexDirection={'row'}\n    overflow={'auto'}\n    paddingLeft={'16px'}\n    paddingRight={'16px'}\n  >\n    <ListSpacer />\n    {rhymes.map((rhyme) => (\n      <RhymesListItem\n        rhyme={rhyme}\n        key={rhyme.word}\n        onRhymeClicked={onRhymeClicked}\n      />\n    ))}\n    <ListSpacer />\n  </Box>\n));\n\n/** The props needed to render the {@link Rhymes} component. */\nexport interface RhymesProps extends DetailPaneChildProps {\n  /** The query to find rhymes for. */\n  query?: string;\n  /**\n   * Invoked when a rhyme is clicked.\n   *\n   * @param rhyme The rhyme that was clicked.\n   */\n  onRhymeClicked: (rhyme: Rhyme) => void;\n}\n\n/**\n * Given a query, fetches and renders a list of rhymes that can be clicked by a user.\n *\n * @param props The props needed to render this component.\n */\nexport const Rhymes: React.FC<RhymesProps> = (props) => {\n  const [state, send] = useMachine(rhymesMachine);\n\n  const handleError = useErrorHandler();\n\n  const [preferences] = useChannelData('prefs-updated');\n\n  useLayoutEffect(() => {\n    if (!props.isVisible || !props.query || !preferences) {\n      return;\n    }\n    send({\n      type: 'INPUT',\n      input: props.query,\n      rhymeSource: preferences.rhymeSource,\n    });\n  }, [props.query, props.isVisible, preferences]);\n\n  useEffect(() => {\n    if (state.matches('error')) {\n      handleError(state.context.error);\n    }\n  }, [handleError, state]);\n\n  useEffect(() => {\n    props.onLoadingChanged?.(state.matches('loading'));\n  }, [state.matches('loading')]);\n\n  const rhymes: Rhyme[] = state.context.rhymes;\n\n  return (\n    <Box\n      display={'flex'}\n      flexDirection={'column'}\n      gap={'8px'}\n      height={'100%'}\n      width={'100%'}\n    >\n      <NullStateText\n        visible={state.matches('inactive')}\n        text={'Waiting for lyrics'}\n      />\n\n      <NullStateText\n        visible={state.matches('no-results')}\n        text={'No rhymes found'}\n      />\n\n      <RhymesList rhymes={rhymes} onRhymeClicked={props.onRhymeClicked} />\n    </Box>\n  );\n};\n","import { DetailPaneVisibility } from '@lyricistant/common/preferences/PreferencesData';\nimport { useSmallLayout } from '@lyricistant/renderer/app/useSmallLayout';\nimport {\n  Diagnostics,\n  DiagnosticsPanelProps,\n} from '@lyricistant/renderer/diagnostics/Diagnostics';\nimport {\n  Dictionary,\n  DictionaryProps,\n} from '@lyricistant/renderer/dictionary/Dictionary';\nimport {\n  useChannel,\n  useChannelData,\n} from '@lyricistant/renderer/platform/useChannel';\nimport { Rhymes, RhymesProps } from '@lyricistant/renderer/rhymes/Rhymes';\nimport { ChevronLeft, ChevronRight, Spellcheck } from '@mui/icons-material';\nimport {\n  Box,\n  Fab,\n  LinearProgress,\n  Paper,\n  Slide,\n  Tab,\n  Tabs,\n} from '@mui/material';\nimport {\n  BookAlphabet,\n  ChevronDown,\n  ChevronUp,\n  ScriptOutline,\n} from 'mdi-material-ui';\nimport React, {\n  ReactElement,\n  PropsWithChildren,\n  useEffect,\n  useState,\n  useCallback,\n} from 'react';\n\ninterface Button {\n  onClick: () => void;\n  icon: ReactElement;\n}\n\ninterface TabChangedData {\n  isQueryTab: boolean;\n}\n\ninterface DetailPaneProps {\n  buttons: Button[];\n  rhymeProps: Omit<RhymesProps, keyof DetailPaneChildProps>;\n  dictionaryProps: Omit<DictionaryProps, keyof DetailPaneChildProps>;\n  diagnosticsProps: Omit<DiagnosticsPanelProps, keyof DetailPaneChildProps>;\n  onTabChanged: (data: TabChangedData) => void;\n}\n\nexport interface DetailPaneChildProps {\n  isVisible: boolean;\n  onLoadingChanged: (isLoading: boolean) => void;\n}\n\ntype TabbedItemProps = PropsWithChildren<{\n  index: number;\n  selectedIndex: number;\n}>;\nconst TabbedItem = ({ index, selectedIndex, children }: TabbedItemProps) => (\n  <Box\n    sx={{\n      display: index === selectedIndex ? 'block' : 'none',\n      flex: '1 1 auto',\n      overflow: 'auto',\n    }}\n  >\n    {children}\n  </Box>\n);\n\nconst ToggleDetailPaneIcon = ({ isExpanded }: { isExpanded: boolean }) => {\n  const isSmallLayout = useSmallLayout();\n  if (isSmallLayout) {\n    if (isExpanded) {\n      return <ChevronDown />;\n    }\n    return <ChevronUp />;\n  }\n  if (isExpanded) {\n    return <ChevronRight />;\n  }\n  return <ChevronLeft />;\n};\n\nconst DetailButton = (props: Button) => (\n  <Fab size={'small'} onClick={() => props.onClick()} color={'primary'}>\n    {props.icon}\n  </Fab>\n);\n\n/**\n * Renders the Rhymes and Dictionary components inside a floating pane that can\n * optionally be toggled so that it disappears and reappears depending on the\n * user's preferences.\n */\nexport const DetailPane: React.FC<DetailPaneProps> = (props) => {\n  const [tabIndex, setTabIndex] = useState(0);\n  const [isLoading, setLoading] = useState(false);\n  const [isExpanded, setExpanded] = useState(true);\n  const isSmallLayout = useSmallLayout();\n  const [isAnimating, setIsAnimating] = useState(false);\n  const [preferencesData] = useChannelData('prefs-updated');\n\n  const changeTab = useCallback(\n    (index: number) => {\n      setTabIndex(index);\n      props.onTabChanged({\n        // Rhymes and Dictionary both use a query to show data.\n        isQueryTab: index === 0 || index === 1,\n      });\n    },\n    [setTabIndex, props.onTabChanged]\n  );\n\n  const showToggleButton =\n    preferencesData == null ||\n    preferencesData.detailPaneVisibility === DetailPaneVisibility.Toggleable;\n\n  useChannel(\n    'show-detail-pane',\n    () => {\n      if (showToggleButton) {\n        setExpanded(true);\n      }\n    },\n    [showToggleButton]\n  );\n\n  useChannel(\n    'close-detail-pane',\n    () => {\n      if (showToggleButton) {\n        setExpanded(false);\n      }\n    },\n    [showToggleButton]\n  );\n\n  // When we're closed and not animating, position as absolute so that only the\n  // button is actually taking up space in the layout. Use position instead of\n  // display so that the animation can finish properly.\n  const paperDisplay = !isExpanded && !isAnimating ? 'none' : 'unset';\n\n  useEffect(() => {\n    setLoading(false);\n  }, [tabIndex]);\n\n  useEffect(() => {\n    if (!isSmallLayout) {\n      setExpanded(true);\n    }\n  }, [isSmallLayout]);\n\n  useEffect(() => {\n    if (\n      preferencesData?.detailPaneVisibility === DetailPaneVisibility.Always_Show\n    ) {\n      setExpanded(true);\n      setIsAnimating(false);\n    }\n  }, [preferencesData?.detailPaneVisibility]);\n\n  return (\n    <Box\n      width={isSmallLayout ? undefined : '400px'}\n      flex={isSmallLayout ? '0 1' : undefined}\n    >\n      <Box\n        display={'flex'}\n        flexDirection={'column'}\n        justifyContent={'end'}\n        paddingTop={isSmallLayout ? undefined : '16px'}\n        paddingLeft={isSmallLayout ? '16px' : undefined}\n        paddingRight={'16px'}\n        paddingBottom={'16px'}\n        height={'100%'}\n        width={'100%'}\n        gap={'8px'}\n      >\n        <Slide\n          in={isExpanded}\n          direction={isSmallLayout ? 'up' : 'left'}\n          onEnter={() => setIsAnimating(true)}\n          onExited={() => setIsAnimating(false)}\n        >\n          <Paper\n            elevation={1}\n            sx={{\n              minHeight: isSmallLayout ? '250px' : undefined,\n              maxHeight: isSmallLayout ? '600px' : undefined,\n              flex: '1 1 0',\n              display: paperDisplay,\n              overflow: 'auto',\n            }}\n          >\n            <Box\n              display={'flex'}\n              flexDirection={'column'}\n              height={'100%'}\n              width={'100%'}\n            >\n              <Tabs\n                value={isExpanded ? tabIndex : false}\n                onChange={(_, newTabIndex) => changeTab(newTabIndex)}\n                variant={'fullWidth'}\n                sx={{\n                  flex: '0 0 auto',\n                  boxShadow: 1,\n                }}\n                TabIndicatorProps={{\n                  children: isLoading ? (\n                    <LinearProgress variant={'indeterminate'} />\n                  ) : undefined,\n                }}\n              >\n                <Tab aria-label={'Rhymes Tab'} icon={<ScriptOutline />} />\n                <Tab aria-label={'Dictionary Tab'} icon={<BookAlphabet />} />\n                <Tab aria-label={'Diagnostics Tab'} icon={<Spellcheck />} />\n              </Tabs>\n              <TabbedItem index={0} selectedIndex={tabIndex}>\n                <Rhymes\n                  {...props.rhymeProps}\n                  isVisible={tabIndex === 0 && isExpanded}\n                  onLoadingChanged={setLoading}\n                />\n              </TabbedItem>\n              <TabbedItem index={1} selectedIndex={tabIndex}>\n                <Dictionary\n                  {...props.dictionaryProps}\n                  isVisible={tabIndex === 1 && isExpanded}\n                  onLoadingChanged={setLoading}\n                />\n              </TabbedItem>\n              <TabbedItem index={2} selectedIndex={tabIndex}>\n                <Diagnostics\n                  {...props.diagnosticsProps}\n                  isVisible={tabIndex === 2 && isExpanded}\n                  onLoadingChanged={setLoading}\n                />\n              </TabbedItem>\n            </Box>\n          </Paper>\n        </Slide>\n\n        <Box\n          display={'flex'}\n          justifyContent={'end'}\n          flex={'0 0 auto'}\n          gap={'16px'}\n        >\n          {props.buttons.map((button, index) => (\n            <DetailButton key={index} {...button} />\n          ))}\n          {showToggleButton && (\n            <Fab\n              size={'small'}\n              onClick={() => {\n                setExpanded(!isExpanded);\n              }}\n            >\n              <ToggleDetailPaneIcon isExpanded={isExpanded} />\n            </Fab>\n          )}\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n","import { PlatformFile } from '@lyricistant/common/files/PlatformFile';\n\n/**\n * Represents a {@link DataTransferItem} with an optional getAsFileSystemHandle\n * method that will return a FileSystemHandle.\n *\n * That method is not yet generally available, and Typescript's DOM types do not\n * have support for it yet.\n *\n * https://caniuse.com/mdn-api_datatransferitem_getasfilesystemhandle\n */\ntype FSApiDataTransferItem = DataTransferItem & {\n  getAsFileSystemHandle?: () => Promise<FileSystemFileHandle>;\n};\n/**\n * A file that, optionally, includes a path.\n *\n * Electron uses this to send files with a path parameter, but no other browser\n * does, so we mark it as optional.\n */\ntype FileWithPath = File & { path?: string };\n\n/**\n * Convert a {@link File} or a {@link DataTransferItem} to a {@link PlatformFile}\n * that can be sent to the platform.\n *\n * @param data The File or DataTransferItem to convert.\n */\nexport const toPlatformFile = async (\n  data: FSApiDataTransferItem | FileWithPath\n): Promise<PlatformFile> => {\n  const file: FileWithPath = data instanceof File ? data : data.getAsFile();\n  const handle =\n    data instanceof File ? undefined : await data.getAsFileSystemHandle?.();\n  return {\n    metadata: {\n      path: file.path ?? file.name,\n      name: file.name,\n    },\n    type: file.type ?? '',\n    data: await file.arrayBuffer(),\n    extras: { handle },\n  };\n};\n","import { EditorView } from '@codemirror/view';\nimport { Text, useCodeMirror } from '@lyricistant/codemirror/CodeMirror';\nimport { TextSelectionData } from '@lyricistant/codemirror/textSelection';\nimport { Font } from '@lyricistant/common/preferences/PreferencesData';\nimport { Diagnostic } from '@lyricistant/renderer/diagnostics/DiagnosticsMachine';\nimport { useChannelData } from '@lyricistant/renderer/platform/useChannel';\nimport { Box, styled, useTheme } from '@mui/material';\nimport React, { useCallback, useEffect, useRef } from 'react';\nimport { toPlatformFile } from './to-platform-file';\n\nconst fontFamily = (font?: Font) => {\n  switch (font) {\n    case Font.Roboto:\n      return 'Roboto';\n    default:\n      return 'Roboto Mono';\n  }\n};\nconst EditorContainer = styled('div')({\n  flex: '1 1 500px',\n  minHeight: '50px',\n  position: 'relative',\n});\n\ninterface EdgeFadeProps {\n  endColor: string;\n  towards: 'top' | 'bottom';\n}\n\nconst EdgeFade = ({ endColor, towards }: EdgeFadeProps) => {\n  const startColor = `#${endColor.slice(1)}00`;\n  const rotation = towards === 'bottom' ? '180deg' : '0deg';\n\n  return (\n    <Box\n      sx={{\n        content: \"''\",\n        height: '8px',\n        width: '100%',\n        background: `linear-gradient(${rotation}, ${startColor} 0%, ${endColor} 100%)`,\n        position: 'absolute',\n        zIndex: 1,\n        top: towards === 'top' ? '0' : undefined,\n        bottom: towards === 'bottom' ? '0' : undefined,\n      }}\n    />\n  );\n};\n\nexport interface EditorTextData {\n  /** The text to be displayed in the editor. */\n  text: Text;\n  /**\n   * Does this represent a change from the last text data, or should this be\n   * considered brand new?\n   *\n   * TODO This cannot be a good name...\n   */\n  isTransactional?: boolean;\n  cursorPosition?: number;\n}\n\nexport interface SelectableDiagnostic extends Diagnostic {\n  key: any;\n}\n\n/** The props for the {@link Editor} component. */\nexport interface EditorProps {\n  /** The value to be represented in the editor. */\n  value: EditorTextData;\n  selectedText?: TextSelectionData;\n  diagnostics: Diagnostic[];\n  selectedDiagnostic?: SelectableDiagnostic;\n  onSelectedDiagnosticRendered: (rect: DOMRect) => void;\n  /**\n   * Invoked whenever the text changes.\n   *\n   * @param value The current text data in the editor.\n   */\n  onTextChanged: (value: EditorTextData) => void;\n  /**\n   * Invoked whenever the user selects text in the editor.\n   *\n   * \"Selecting text\" in this scenario means the more obvious action of the user\n   * manually highlighting text and the less obvious action of the user moving\n   * their cursor. In the case whether the user has moved their cursor but\n   * didn't highlight any text, this will instead be the nearest \"word\" to their\n   * cursor, where word is defined as a sequence of alphabetical characters.\n   *\n   * @param value The text currently selected by the user.\n   */\n  onTextSelected: (value: TextSelectionData) => void;\n  /**\n   * Invoked whenever the modification state changes.\n   *\n   * Modification state refers to whether the text in the editor has been\n   * changed or not since the last value update where {@link isTransactional} is false.\n   *\n   * @param isModified Whether the editor has been modified or not.\n   */\n  onModificationStateChanged: (isModified: boolean) => void;\n}\n\nexport const Editor: React.FC<EditorProps> = (props) => {\n  const editor = useRef();\n  const [themeData] = useChannelData('theme-updated');\n  const theme = useTheme();\n  const onFileDropped = useCallback((item: DataTransferItem | File) => {\n    logger.debug('Attempted to drop a file.');\n    toPlatformFile(item)\n      .then((file) => platformDelegate.send('open-file-attempt', file))\n      .catch((reason) => {\n        logger.error(reason);\n      });\n  }, []);\n\n  const onTextChanged = useCallback(\n    (text: Text, cursorPosition: number) => {\n      props.onTextChanged({\n        text,\n        cursorPosition,\n        isTransactional: true,\n      });\n    },\n    [props.onTextChanged]\n  );\n\n  const {\n    view,\n    isModified,\n    resetHistory,\n    redo,\n    undo,\n    openFindReplaceDialog,\n    setContainer,\n  } = useCodeMirror({\n    text: props.value.text,\n    markedText: props.selectedText && {\n      from: props.selectedText.from,\n      to: props.selectedText.to,\n    },\n    cursorPosition: props.value.cursorPosition,\n    onTextChanged,\n    onFileDropped,\n    onTextSelected: props.onTextSelected,\n    font: fontFamily(themeData?.font),\n    diagnostics: props.diagnostics,\n  });\n\n  useEffect(() => {\n    if (editor.current) {\n      setContainer(editor.current);\n    }\n  }, [editor.current]);\n\n  useEffect(() => {\n    props.onModificationStateChanged(isModified);\n  }, [isModified]);\n  useEffect(() => {\n    if (!props.value.isTransactional) {\n      resetHistory();\n    }\n  }, [props.value]);\n\n  useEffect(() => {\n    if (!view || !props.selectedDiagnostic) {\n      return;\n    }\n\n    view.dispatch({\n      effects: [\n        EditorView.scrollIntoView(props.selectedDiagnostic.from, {\n          y: 'start',\n          yMargin: 20,\n        }),\n      ],\n    });\n    const node = view.domAtPos(props.selectedDiagnostic.from).node;\n    const range = document.createRange();\n    range.selectNode(node);\n\n    const handle = setTimeout(() => {\n      // Cheat here so that the scroll finishes from the dispatch earlier.\n      props.onSelectedDiagnosticRendered(range.getBoundingClientRect());\n    }, 0);\n\n    return () => {\n      clearTimeout(handle);\n    };\n  }, [view, props.selectedDiagnostic]);\n\n  useTextActionEvents(undo, redo, openFindReplaceDialog);\n  return (\n    <EditorContainer ref={editor}>\n      <Box\n        sx={{\n          position: 'absolute',\n          top: '0px',\n          bottom: '0px',\n          left: '8px',\n          right: '8px',\n        }}\n      >\n        <EdgeFade towards={'top'} endColor={theme.palette.background.default} />\n        <EdgeFade\n          towards={'bottom'}\n          endColor={theme.palette.background.default}\n        />\n      </Box>\n    </EditorContainer>\n  );\n};\n\nconst useTextActionEvents = (\n  undo: () => void,\n  redo: () => void,\n  openFindReplaceModal: () => void\n) => {\n  useEffect(() => {\n    platformDelegate.on('undo', undo);\n    platformDelegate.on('redo', redo);\n    platformDelegate.on('find', openFindReplaceModal);\n    platformDelegate.on('replace', openFindReplaceModal);\n\n    return () => {\n      platformDelegate.removeListener('undo', undo);\n      platformDelegate.removeListener('redo', redo);\n      platformDelegate.removeListener('find', openFindReplaceModal);\n      platformDelegate.removeListener('replace', openFindReplaceModal);\n    };\n  }, [undo, redo, openFindReplaceModal]);\n};\n","/**\n * Attempts to get the bottom-most error message in a potential error chain.\n *\n * @param message The error to look through.\n * @returns An error, or an error message.\n */\nexport const getRootError = (message: any) => {\n  if (!message) {\n    return message;\n  }\n  let current = message;\n  while (message.stack || message.reason) {\n    if (current === (message.stack || message.reason)) {\n      break;\n    }\n    current = message.stack || message.reason;\n  }\n\n  return current;\n};\n/**\n * Returns whether an error is something that should stop Lyricistant from\n * continuing to run or not.\n *\n * @param message The error, or error message, to check.\n * @param url An optional url given by a window.onerror callback.\n */\nexport const isReportableError = (message: any, url?: string) => {\n  if (typeof message === 'string' && message.includes('ResizeObserver')) {\n    // https://stackoverflow.com/questions/49384120/resizeobserver-loop-limit-exceeded\n    return false;\n  }\n  return !(\n    (!url || url.length === 0) &&\n    typeof message === 'string' &&\n    message.includes('Script error')\n  );\n};\n/**\n * Sets an error handler on the current window to handle an errors that happen,\n * wrapping any existing error handler.\n */\nexport const setWindowErrorHandler = () => {\n  const oldOnError = window.onerror;\n  window.onerror = (message, url, line, col, error) => {\n    const rootError = getRootError(message) ?? getRootError(error);\n    if (!isReportableError(rootError, url)) {\n      return;\n    }\n\n    const availableLogger = logger ?? console;\n    availableLogger.error(JSON.stringify(rootError), { url, line, col }, error);\n\n    if (oldOnError) {\n      oldOnError(rootError, url, line, col, error);\n    } else {\n      alert(\n        [\n          'Sorry, Lyricistant has crashed! Please close this page and contact the developers.',\n          'Continuing to use Lyricistant may result in undesired behavior.',\n          '',\n          `App version: ${process.env.APP_VERSION}`,\n          `Homepage: ${process.env.APP_HOMEPAGE}`,\n        ].join('\\n')\n      );\n    }\n  };\n\n  if (!window.onunhandledrejection) {\n    window.onunhandledrejection = (event) =>\n      window.onerror(event, null, null, null, null);\n  }\n};\n","import { useSmallLayout } from '@lyricistant/renderer/app/useSmallLayout';\nimport { useChannelData } from '@lyricistant/renderer/platform/useChannel';\nimport {\n  AddCircle,\n  FolderOpen,\n  GetApp,\n  History,\n  MoreVert,\n  Save,\n  Settings,\n  SvgIconComponent,\n} from '@mui/icons-material';\nimport {\n  Box,\n  IconButton,\n  ListItemIcon,\n  ListItemText,\n  Menu as MuiMenu,\n  MenuItem,\n  Paper,\n  SxProps,\n  useTheme,\n} from '@mui/material';\nimport React, {\n  FunctionComponent,\n  MouseEvent,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react';\nimport { useDebouncedCallback } from 'use-debounce';\n\nconst MenuIcon: FunctionComponent<{\n  onClick: (event: MouseEvent) => void;\n  ariaLabel: string;\n  debounce?: boolean;\n  sx?: SxProps;\n}> = ({ onClick, ariaLabel, debounce, sx, children }) => {\n  const debouncedClick = useDebouncedCallback(onClick, 200);\n\n  return (\n    <Box\n      padding={'8px'}\n      aria-label={ariaLabel}\n      role={'button'}\n      sx={sx}\n      onClick={debounce ? debouncedClick : onClick}\n    >\n      <IconButton>{children}</IconButton>\n    </Box>\n  );\n};\n\ninterface MenuItemData {\n  icon: SvgIconComponent;\n  label: string;\n  onClick: () => void;\n}\n\ninterface AppBarProps {\n  direction: 'horizontal' | 'vertical';\n  leading: MenuItemData[];\n  trailing: MenuItemData[];\n}\n\nconst toMenuIcon = (item: MenuItemData) => (\n  <MenuIcon key={item.label} onClick={item.onClick} ariaLabel={item.label}>\n    <item.icon />\n  </MenuIcon>\n);\n\nconst MenuBar = (props: AppBarProps) => {\n  const isHorizontal = props.direction === 'horizontal';\n  const [anchor, setAnchor] = useState<Element>(null);\n  const onMenuClicked = (event: MouseEvent) => setAnchor(event.currentTarget);\n\n  const shouldTrim = useMemo(\n    () => props.leading.length > 3 && isHorizontal,\n    [props.leading, isHorizontal]\n  );\n\n  const leading: MenuItemData[] = useMemo(() => {\n    if (shouldTrim) {\n      return props.leading.slice(0, 3);\n    }\n    return props.leading;\n  }, [props.leading, shouldTrim]);\n\n  const trailing: MenuItemData[] = useMemo(() => {\n    if (shouldTrim) {\n      return [...props.leading.slice(3), ...props.trailing];\n    }\n    return props.trailing;\n  }, [props.leading, props.trailing, shouldTrim]);\n\n  useEffect(() => {\n    setAnchor(null);\n  }, [isHorizontal]);\n\n  return (\n    <Box\n      display={'flex'}\n      height={isHorizontal ? 'auto' : '100%'}\n      width={isHorizontal ? '100%' : 'auto'}\n      flexDirection={isHorizontal ? 'row' : 'column'}\n    >\n      {leading.map(toMenuIcon)}\n      <Box flexGrow={'1'} />\n      <MenuIcon\n        sx={{ display: isHorizontal ? undefined : 'none' }}\n        ariaLabel={'Additional Menu Buttons'}\n        onClick={onMenuClicked}\n        debounce={false}\n      >\n        <MoreVert />\n      </MenuIcon>\n      <MuiMenu\n        anchorEl={anchor}\n        open={!!anchor}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'left',\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'left',\n        }}\n        onClose={() => setAnchor(null)}\n      >\n        {trailing.map((item) => (\n          <MenuItem\n            key={item.label}\n            aria-label={item.label}\n            onClick={() => {\n              setAnchor(null);\n              item.onClick();\n            }}\n          >\n            <ListItemIcon>\n              <item.icon />\n            </ListItemIcon>\n            <ListItemText>{item.label}</ListItemText>\n          </MenuItem>\n        ))}\n      </MuiMenu>\n      {isHorizontal ? null : trailing.map(toMenuIcon)}\n    </Box>\n  );\n};\n\n/** The props needed to render {@link Menu}. */\nexport interface MenuProps {\n  /** Invoked when the new button is clicked */\n  onNewClicked: () => void;\n  /** Invoked when the open button is clicked */\n  onOpenClicked: () => void;\n  /** Invoked when the save button is clicked */\n  onSaveClicked: () => void;\n  /** Invoked when the preferences button is clicked */\n  onPreferencesClicked: () => void;\n  /** Invoked when the download button is clicked */\n  onDownloadClicked: () => void;\n  /** Invoked when the file history button is clicked */\n  onFileHistoryClicked: () => void;\n}\n\n/**\n * Renders a menu, which is a list of buttons.\n *\n * When in small layout, this menu renders horizontally. If there are more than\n * 3 buttons, it will show the extras in an overflow menu.\n *\n * When not in small layout, it renders vertically with spacing between the\n * first 4 buttons and the rest of the button.\n *\n * @param props The props needed to render this component.\n */\nexport const Menu: React.FC<MenuProps> = (props) => {\n  const theme = useTheme();\n  const [uiConfig] = useChannelData('ui-config');\n  const isSmallLayout = useSmallLayout();\n  const direction = isSmallLayout ? 'horizontal' : 'vertical';\n\n  const leadingIcons = useMemo(\n    () =>\n      [\n        {\n          label: 'New file',\n          icon: AddCircle,\n          onClick: props.onNewClicked,\n        },\n        uiConfig?.showOpen && {\n          label: 'Open file',\n          icon: FolderOpen,\n          onClick: props.onOpenClicked,\n        },\n        {\n          label: 'Save file',\n          icon: Save,\n          onClick: props.onSaveClicked,\n        },\n        uiConfig?.showOpen && {\n          label: 'View file history',\n          icon: History,\n          onClick: props.onFileHistoryClicked,\n        },\n      ].filter((node) => node),\n    [uiConfig, props]\n  );\n  const trailingIcons = useMemo(\n    () =>\n      [\n        uiConfig?.showDownload && {\n          label: 'Download Lyricistant',\n          icon: GetApp,\n          onClick: props.onDownloadClicked,\n        },\n        {\n          label: 'Open preferences',\n          icon: Settings,\n          onClick: props.onPreferencesClicked,\n        },\n      ].filter((value) => !!value),\n    [uiConfig, props]\n  );\n\n  return (\n    <Box\n      paddingTop={'8px'}\n      paddingLeft={'8px'}\n      paddingRight={isSmallLayout ? '8px' : undefined}\n      paddingBottom={isSmallLayout ? undefined : '8px'}\n    >\n      <Paper\n        color={theme.palette.primary.main}\n        sx={{\n          backgroundColor: theme.palette.background.paper,\n          height: isSmallLayout ? 'auto' : '100%',\n          width: isSmallLayout ? '100%' : 'auto',\n        }}\n      >\n        <MenuBar\n          direction={direction}\n          leading={leadingIcons}\n          trailing={trailingIcons}\n        />\n      </Paper>\n    </Box>\n  );\n};\n","import { useSmallLayout } from '@lyricistant/renderer/app/useSmallLayout';\nimport { Box } from '@mui/material';\nimport React, { ReactNode, useEffect } from 'react';\n\ninterface ResponsiveMenuDetailLayoutProps {\n  /** The main component that should be displayed. */\n  main: ReactNode;\n  /** The detail, secondary, component that should be displayed. */\n  detail: ReactNode;\n  /** The menu component that should be displayed. */\n  menu: ReactNode;\n}\n\n/**\n * A responsive layout with a main, detail, and menu section that changes based\n * on the screen size.\n *\n * @param props The props for this component.\n */\nexport const ResponsiveMainDetailLayout = ({\n  main,\n  detail,\n  menu,\n}: ResponsiveMenuDetailLayoutProps) => {\n  const isSmallLayout = useSmallLayout();\n\n  useEffect(() => {\n    logger.info(`Switching layout. isSmallLayout: ${isSmallLayout}`);\n  }, [isSmallLayout]);\n\n  return (\n    <Box\n      flex={'1 1 auto'}\n      display={'flex'}\n      overflow={'hidden'}\n      flexDirection={isSmallLayout ? 'column' : 'row'}\n    >\n      <React.Fragment key={'menu'}>{menu}</React.Fragment>\n      <React.Fragment key={'main'}>{main}</React.Fragment>\n      <React.Fragment key={'detail'}>{detail}</React.Fragment>\n    </Box>\n  );\n};\n","import { UiConfig } from '@lyricistant/common/ui/UiConfig';\nimport { useChannel } from '@lyricistant/renderer/platform/useChannel';\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n} from '@mui/material';\nimport React, { useState } from 'react';\nimport { PropsWithChildren } from 'react';\nimport { isIE, isMobile } from 'react-device-detect';\n\nconst isUnsupportedBrowser = isMobile || isIE || !Promise || !File || !Blob;\n\nconst getTipMessage = () => {\n  if (isMobile) {\n    return 'Try switching to a desktop browser.';\n  } else {\n    return 'Try switching to a more modern browser.';\n  }\n};\n\nconst WarningDialog = ({\n  onContinue,\n  open,\n}: {\n  onContinue: () => void;\n  open: boolean;\n}) => (\n  <Dialog open={open}>\n    <DialogTitle>Unsupported browser</DialogTitle>\n    <DialogContent>\n      <DialogContentText>\n        Lyricistant doesn't currently support your browser. You might experience\n        some bugs or performance issues. {getTipMessage()}\n      </DialogContentText>\n    </DialogContent>\n\n    <DialogActions>\n      <Button key=\"no\" onClick={() => window.history.back()} color=\"primary\">\n        Go back\n      </Button>\n      <Button key=\"yes\" onClick={onContinue} color=\"primary\">\n        Continue\n      </Button>\n    </DialogActions>\n  </Dialog>\n);\n\n/** A dialog that displays whenever Lyricistant is running against an unsupported browser. */\nexport function SupportedBrowserWarning({\n  children,\n}: PropsWithChildren<Record<never, never>>) {\n  const [uiConfig, setUiConfig] = useState<UiConfig>(null);\n  useChannel('ui-config', setUiConfig);\n  const [isAcknowledged, setAcknowledged] = useState(false);\n  const showWarning =\n    uiConfig?.showBrowserWarning === true &&\n    isUnsupportedBrowser &&\n    !isAcknowledged;\n  return (\n    <>\n      <WarningDialog\n        open={showWarning}\n        onContinue={() => setAcknowledged(true)}\n      />\n      {children}\n    </>\n  );\n}\n","import { setupAnalytics } from '@lyricistant/renderer/analytics/setupAnalytics';\nimport { App } from '@lyricistant/renderer/app/App';\nimport { PlatformEventsReadyHandler } from '@lyricistant/renderer/app/PlatformEventsReadyHandler';\nimport { SupportedBrowserWarning } from '@lyricistant/renderer/app/SupportedBrowserWarning';\nimport { setWindowErrorHandler } from '@lyricistant/renderer/errors/ErrorHandlers';\nimport { onPageLoaded, onThemeUpdated } from '@lyricistant/renderer/preload';\nimport { Themed } from '@lyricistant/renderer/theme/Themed';\nimport { SnackbarProvider } from 'notistack';\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { Router, BaseLocationHook } from 'wouter';\nimport { useLocationProperty, navigate } from 'wouter/use-location';\n\nif (module.hot) {\n  module.hot.accept();\n}\n\nsetWindowErrorHandler();\nsetupAnalytics();\nconst container: HTMLElement = document.getElementById('app');\nconst root = ReactDOM.createRoot(container);\n\nconst hashLocation = () => window.location.hash.replace(/^#/, '') || '/';\nconst hashNavigate = (to: string, ...args: any[]) => {\n  if (to) {\n    navigate('#' + to, ...args);\n  } else {\n    navigate('/', ...args);\n  }\n  window.history.replaceState({ internal: true }, null, null);\n};\n\nconst useHashLocation: BaseLocationHook = () => {\n  const location = useLocationProperty(hashLocation);\n  return [location, hashNavigate];\n};\n\nroot.render(\n  <React.StrictMode>\n    <PlatformEventsReadyHandler>\n      <Themed\n        onThemeChanged={(palette) => {\n          document.body.style.backgroundColor = palette.background;\n          document.body.style.color = palette.primaryText;\n          onThemeUpdated(palette);\n        }}\n        onThemeReady={() => {\n          onPageLoaded();\n          container.style.opacity = '100%';\n        }}\n      >\n        <SnackbarProvider\n          maxSnack={3}\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'right',\n          }}\n        >\n          <SupportedBrowserWarning>\n            <Router hook={useHashLocation}>\n              <App />\n            </Router>\n          </SupportedBrowserWarning>\n        </SnackbarProvider>\n      </Themed>\n    </PlatformEventsReadyHandler>\n  </React.StrictMode>\n);\n","import { isUnderTest } from '@lyricistant/common/BuildModes';\nimport { APP_PLATFORM, APP_VERSION } from '@lyricistant/renderer/globals';\n\n/**\n * When running in production, connects to an analytics server and reports the\n * current version of Lyricistant that is running as well as the platform it is\n * being run on.\n */\nexport const setupAnalytics = () => {\n  if (process.env.NODE_ENV !== 'production' || isUnderTest) {\n    return;\n  }\n\n  const settings = {\n    allow_local: true,\n    no_onload: true,\n    no_events: true,\n  };\n  const analyticsScript = document.createElement('script');\n  analyticsScript.setAttribute('src', 'https://gc.zgo.at/count.js');\n  analyticsScript.setAttribute('async', 'true');\n  analyticsScript.setAttribute(\n    'data-goatcounter',\n    'https://lyricistant.goatcounter.com/count'\n  );\n  analyticsScript.setAttribute(\n    'data-goatcounter-settings',\n    JSON.stringify(settings)\n  );\n  document.head.append(analyticsScript);\n\n  const timeoutId = setTimeout(() => {\n    if (!window.goatcounter || !window.goatcounter.count) {\n      return;\n    }\n\n    let site: string;\n    if (location.host.includes('lyricistant.app')) {\n      site = location.host;\n    } else {\n      site = APP_PLATFORM;\n    }\n\n    const path = `${site}/${APP_VERSION}/`;\n\n    clearTimeout(timeoutId);\n\n    window.goatcounter.count({\n      path,\n      title: '',\n      event: false,\n    });\n  }, 10000);\n};\n","import React, { ReactNode, useEffect, useRef } from 'react';\n\n/**\n * Handles telling the platform when the renderer is ready to receive events.\n *\n * Due to how React's useEffect works, this MUST be the top-most component in\n * the tree that uses the platform delegate, so that the app properly alerts the\n * platform that it is ready to receive events after every other component has\n * registered its own platform listeners.\n */\nexport const PlatformEventsReadyHandler = ({\n  children,\n}: {\n  children: ReactNode;\n}) => {\n  // useEffects can be called multiple times (and are in Strict mode) so this makes sure this\n  // is really only ever called once.\n  const hasSentReadyForEvents = useRef(false);\n  useEffect(() => {\n    if (!hasSentReadyForEvents.current) {\n      platformDelegate.send('ready-for-events', {\n        isDeepLink: location.hash.length !== 0,\n      });\n    }\n\n    hasSentReadyForEvents.current = true;\n  }, []);\n  return <>{children}</>;\n};\n","import {\n  Font,\n  ThemeData,\n} from '@lyricistant/common/preferences/PreferencesData';\nimport { Palette } from '@lyricistant/common/theme/SystemTheme';\nimport { useChannel } from '@lyricistant/renderer/platform/useChannel';\nimport { createTheme, getThemePalette } from '@lyricistant/renderer/theme';\nimport {\n  CssBaseline,\n  GlobalStyles,\n  StyledEngineProvider,\n  ThemeProvider,\n} from '@mui/material';\nimport React, {\n  FunctionComponent,\n  PropsWithChildren,\n  useEffect,\n  useState,\n} from 'react';\n\nconst loadFont = async (themeData?: ThemeData) => {\n  switch (themeData?.font) {\n    case Font.Roboto:\n      return import('@fontsource/roboto/latin-400.css');\n    default:\n      return import('@fontsource/roboto-mono/latin-400.css');\n  }\n};\n/**\n * A component that provides a MUI theme to all of its children, handles loading\n * fonts, and sets a standard CSS baseline.\n *\n * @param onThemeChanged Invoked when the theme changes.\n * @param onThemeReady Invoked when a theme has been successfully created.\n * @param children The children of this component.\n */\nexport const Themed: FunctionComponent<\n  PropsWithChildren<{\n    onThemeChanged: (palette: Palette) => void;\n    onThemeReady: () => void;\n  }>\n> = ({ onThemeChanged, onThemeReady, children }) => {\n  const [theme, setTheme] = useState(createTheme());\n  const [palette, setPalette] = useState<Palette | null>(null);\n\n  useChannel(\n    'theme-updated',\n    (themeData) => {\n      const appTheme = createTheme(themeData);\n      setPalette(getThemePalette(themeData).palette);\n\n      loadFont(themeData)\n        .then(() => {\n          setTheme(appTheme);\n          onThemeReady();\n        })\n        .catch((reason) => {\n          setTheme(appTheme);\n          onThemeReady();\n          logger.warn('Failed to load fonts', reason);\n        });\n    },\n    [setTheme]\n  );\n\n  useEffect(() => {\n    if (palette) {\n      onThemeChanged(palette);\n    }\n  }, [palette, onThemeChanged]);\n\n  return (\n    <StyledEngineProvider injectFirst>\n      <ThemeProvider theme={theme}>\n        <GlobalStyles\n          styles={{\n            '.random-button': {\n              color: theme.palette.primary.main,\n              backgroundColor: theme.palette.background.default,\n            },\n          }}\n        />\n        <CssBaseline>{children} </CssBaseline>\n      </ThemeProvider>\n    </StyledEngineProvider>\n  );\n};\n","import { Text } from '@lyricistant/codemirror/CodeMirror';\nimport { TextSelectionData } from '@lyricistant/codemirror/textSelection';\nimport { AppError } from '@lyricistant/renderer/app/AppError';\nimport { Modals } from '@lyricistant/renderer/app/Modals';\nimport { useNavigation } from '@lyricistant/renderer/app/Navigation';\nimport { useSmallLayout } from '@lyricistant/renderer/app/useSmallLayout';\nimport { DetailPane } from '@lyricistant/renderer/detail/DetailPane';\nimport { DiagnosticActionPopover } from '@lyricistant/renderer/diagnostics/Diagnostics';\nimport { Diagnostic } from '@lyricistant/renderer/diagnostics/DiagnosticsMachine';\nimport {\n  Editor,\n  EditorTextData,\n  SelectableDiagnostic,\n} from '@lyricistant/renderer/editor/Editor';\nimport {\n  getRootError,\n  isReportableError,\n} from '@lyricistant/renderer/errors/ErrorHandlers';\nimport { Menu } from '@lyricistant/renderer/menu/Menu';\nimport {\n  useChannel,\n  useChannelData,\n} from '@lyricistant/renderer/platform/useChannel';\nimport { Rhyme } from '@lyricistant/renderer/rhymes/rhyme';\nimport { useEventCallback } from '@mui/material';\nimport { sample, startCase } from 'lodash-es';\nimport { Dice6 } from 'mdi-material-ui';\nimport { useSnackbar } from 'notistack';\nimport React, { useCallback, useEffect, useReducer, useState } from 'react';\nimport { useBeforeunload as useBeforeUnload } from 'react-beforeunload';\nimport { ErrorBoundary, FallbackProps } from 'react-error-boundary';\nimport { ResponsiveMainDetailLayout } from './ResponsiveMainDetailLayout';\n\nconst MINIMUM_IDLE_TIME = 15_000;\n\n/**\n * The Lyricistant app.\n *\n * Any component that renders any UI directly related to the core functionality\n * of Lyricistant must be a child of this component, either directly or\n * indirectly. Components that don't render UI, such as a Router or a\n * ThemeProvider, are allowed to be a parent of this component. Components that\n * potentially gate Lyricistant's ability to run, such as a component that\n * checks whether we're running on a supported browser, would also be allowed to\n * be a parent of this component.\n */\nexport function App() {\n  const [editorTextData, setEditorTextData] = useState<EditorTextData>({\n    text: Text.empty,\n    isTransactional: false,\n  });\n  const [error, setError] = useState<any>(null);\n  const [selectedText, setSelectedText] = useState<TextSelectionData>();\n  const [isModified, setIsModified] = useState(false);\n  const navigate = useNavigation();\n  const [uiConfig] = useChannelData('ui-config');\n  const [showQuerySelection, setShowQuerySelection] = useState(true);\n  const [diagnostics, onDiagnosticsLoaded] = useState([]);\n  const [selectedDiagnostic, setSelectedDiagnostic] =\n    useState<SelectableDiagnostic>(null);\n  const [selectedDiagnosticRect, setSelectedDiagnosticRect] =\n    useState<DOMRect>(null);\n  const [selectedDiagnosticKey, incrementKey] = useReducer(\n    (value) => value + 1,\n    0\n  );\n\n  useEffect(() => {\n    setSelectedDiagnostic(null);\n  }, [diagnostics]);\n\n  const onSaveClicked = useCallback(\n    () =>\n      platformDelegate.send(\n        'save-file-attempt',\n        editorTextData.text.toString()\n      ),\n    [editorTextData.text]\n  );\n\n  const onPartialEditorTextDataUpdate = useCallback(\n    (data: Partial<EditorTextData>) => {\n      setEditorTextData((textData) => ({ ...textData, ...data }));\n    },\n    [setEditorTextData]\n  );\n  const onTextReplacement = useEventCallback((text: string) => {\n    const prefix = editorTextData.text.sliceString(0, selectedText.from);\n    const suffix = editorTextData.text.sliceString(selectedText.to);\n\n    setEditorTextData({\n      text: Text.of((prefix + text + suffix).split('\\n')),\n      isTransactional: true,\n      cursorPosition: selectedText.from + text.length,\n    });\n    setSelectedText({\n      text,\n      from: selectedText.from,\n      to: selectedText.from + text.length,\n    });\n  });\n\n  const onTextSelected = useEventCallback((value: TextSelectionData) => {\n    if (value && value.text) {\n      setSelectedText(value);\n    }\n  });\n\n  useChannel('app-title-changed', (title) => (document.title = title));\n\n  useFileEvents(isModified, onPartialEditorTextDataUpdate, () =>\n    setSelectedText({ from: 0, to: 0, text: '' })\n  );\n  useBeforeUnload(() => {\n    if (uiConfig?.promptOnUrlChange && isModified) {\n      return \"Are you sure you want to leave? Your changes haven't been saved.\";\n    }\n  });\n\n  useEffect(() => {\n    const onTextRequested = () => {\n      platformDelegate.send('editor-text', editorTextData.text.toString());\n    };\n    platformDelegate.on('request-editor-text', onTextRequested);\n    return () => {\n      platformDelegate.removeListener('request-editor-text', onTextRequested);\n    };\n  }, [editorTextData.text]);\n\n  useEffect(() => {\n    window.onerror = (message, url, col, line, newError) => {\n      const rootError = getRootError(newError ?? message);\n      if (isReportableError(rootError, url)) {\n        setError(rootError);\n      }\n    };\n    window.onunhandledrejection = window.onerror;\n  }, []);\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      platformDelegate.send('editor-idle', editorTextData.text.toString());\n    }, MINIMUM_IDLE_TIME);\n    return () => clearTimeout(timer);\n  }, [editorTextData]);\n\n  const isSmallLayout = useSmallLayout();\n  useEffect(() => {\n    platformDelegate.send('layout-changed', isSmallLayout);\n  }, [isSmallLayout]);\n\n  const fallbackErrorRendering = useCallback(\n    (props: FallbackProps) => (\n      <AppError\n        error={getRootError(props.error)}\n        editorText={editorTextData.text.toString()}\n      />\n    ),\n    [editorTextData.text]\n  );\n\n  const onDownloadClicked = useEventCallback(() => navigate('/download'));\n  const onFileHistoryClicked = useEventCallback(() =>\n    navigate('/file-history')\n  );\n  const onPreferencesClicked = useEventCallback(() => navigate('/preferences'));\n  const onNewClicked = useEventCallback(() =>\n    platformDelegate.send('new-file-attempt')\n  );\n  const onOpenClicked = useEventCallback(() =>\n    platformDelegate.send('open-file-attempt')\n  );\n  const onRhymeClicked = useEventCallback((rhyme: Rhyme) =>\n    onTextReplacement(rhyme.word)\n  );\n\n  const { onInspirationButtonClicked, isInspirationButtonEnabled } =\n    useInspirationButton(editorTextData, setEditorTextData, setSelectedText);\n\n  const { onProposalAccepted } = useProposalAcceptance(\n    editorTextData,\n    setEditorTextData,\n    setSelectedText\n  );\n\n  const detailPaneButtons = [\n    isInspirationButtonEnabled && {\n      icon: <Dice6 />,\n      onClick: onInspirationButtonClicked,\n    },\n  ].filter((button) => !!button);\n\n  if (error) {\n    return (\n      <AppError error={error} editorText={editorTextData.text.toString()} />\n    );\n  }\n\n  return (\n    <ErrorBoundary fallbackRender={fallbackErrorRendering}>\n      <ResponsiveMainDetailLayout\n        menu={\n          <Menu\n            onDownloadClicked={onDownloadClicked}\n            onFileHistoryClicked={onFileHistoryClicked}\n            onPreferencesClicked={onPreferencesClicked}\n            onNewClicked={onNewClicked}\n            onOpenClicked={onOpenClicked}\n            onSaveClicked={onSaveClicked}\n          />\n        }\n        main={\n          <Editor\n            value={editorTextData}\n            selectedText={showQuerySelection ? selectedText : null}\n            diagnostics={diagnostics}\n            selectedDiagnostic={selectedDiagnostic}\n            onSelectedDiagnosticRendered={setSelectedDiagnosticRect}\n            onTextChanged={setEditorTextData}\n            onTextSelected={onTextSelected}\n            onModificationStateChanged={setIsModified}\n          />\n        }\n        detail={\n          <DetailPane\n            buttons={detailPaneButtons}\n            onTabChanged={(data) => {\n              setShowQuerySelection(data.isQueryTab);\n            }}\n            rhymeProps={{\n              onRhymeClicked,\n              query: selectedText?.text,\n            }}\n            dictionaryProps={{\n              onRelatedTextClicked: onTextReplacement,\n              query: selectedText?.text,\n            }}\n            diagnosticsProps={{\n              text: editorTextData.text,\n              onDiagnosticsLoaded,\n              onProposalAccepted,\n              onDiagnosticClicked: (diagnostic) => {\n                setSelectedDiagnostic({\n                  ...diagnostic,\n                  key: selectedDiagnosticKey,\n                });\n                incrementKey();\n              },\n            }}\n          />\n        }\n      />\n      <Modals />\n      <DiagnosticActionPopover\n        diagnostic={selectedDiagnostic}\n        domRect={selectedDiagnosticRect}\n        onProposalAccepted={onProposalAccepted}\n        onClose={() => {\n          setSelectedDiagnostic(null);\n          setSelectedDiagnosticRect(null);\n        }}\n      />\n    </ErrorBoundary>\n  );\n}\n\nconst useProposalAcceptance = (\n  editorTextData: EditorTextData,\n  setEditorTextData: (data: EditorTextData) => void,\n  setSelectedText: (data: TextSelectionData) => void\n) => {\n  const onProposalAccepted = useEventCallback(\n    (proposal: string, diagnostic: Diagnostic) => {\n      setEditorTextData({\n        ...editorTextData,\n        text: editorTextData.text.replace(\n          diagnostic.from,\n          diagnostic.to,\n          Text.of([proposal])\n        ),\n      });\n      setSelectedText({\n        text: proposal,\n        from: diagnostic.from,\n        to: diagnostic.from + proposal.length,\n      });\n    }\n  );\n\n  return {\n    onProposalAccepted,\n  };\n};\n\nconst useInspirationWords = () => {\n  const [inspirationWords, setInspirationWords] = useState<string[]>(null);\n  useEffect(() => {\n    if (!inspirationWords) {\n      import('./inspiration_words.json').then((words) => {\n        setInspirationWords(words);\n      });\n    }\n  }, []);\n  return inspirationWords;\n};\n\nconst useInspirationButton = (\n  editorTextData: EditorTextData,\n  setEditorTextData: (data: EditorTextData) => void,\n  setSelectedText: (data: TextSelectionData) => void\n) => {\n  const inspirationWords = useInspirationWords();\n  const onInspirationButtonClicked = useEventCallback(() => {\n    const position = editorTextData.cursorPosition ?? 0;\n    const prefix = editorTextData.text.sliceString(0, position);\n    const suffix = editorTextData.text.sliceString(position);\n\n    const word = sample(inspirationWords);\n    const line = editorTextData.text.lineAt(position);\n    let newText = word;\n    let newPosition = position + word.length;\n    const isStartOfLine = position === line.from;\n    const isEndOfLine = position === line.to;\n\n    if (isStartOfLine) {\n      newText = startCase(newText);\n    }\n\n    const isPreviousCharacterSpace =\n      !isStartOfLine &&\n      position > 0 &&\n      editorTextData.text\n        .slice(position - 1, position)\n        .toString()\n        .match(/\\s/);\n    const isNextCharacterSpace =\n      !isEndOfLine &&\n      position < editorTextData.text.length &&\n      editorTextData.text\n        .slice(position, position + 1)\n        .toString()\n        .match(/\\s/);\n\n    if (prefix && !isStartOfLine && !isPreviousCharacterSpace) {\n      newText = ' ' + newText;\n      newPosition += 1;\n    }\n    if (suffix && !isEndOfLine && !isNextCharacterSpace) {\n      newText = newText + ' ';\n    }\n\n    setEditorTextData({\n      text: Text.of((prefix + newText + suffix).split('\\n')),\n      isTransactional: true,\n      cursorPosition: newPosition,\n    });\n    setSelectedText({\n      text: word,\n      from: newPosition - word.length,\n      to: newPosition,\n    });\n  });\n\n  return {\n    onInspirationButtonClicked,\n    isInspirationButtonEnabled: !!inspirationWords,\n  };\n};\n\nconst useFileEvents = (\n  isModified: boolean,\n  setEditorText: (text: Partial<EditorTextData>) => void,\n  resetTextSelection: () => void\n) => {\n  const { enqueueSnackbar } = useSnackbar();\n\n  useEffect(() => {\n    const onCheckFileModified = () => {\n      platformDelegate.send('is-file-modified', isModified);\n    };\n    platformDelegate.on('check-file-modified', onCheckFileModified);\n\n    const onFileSaveEnded = (error: any, path: string) => {\n      setEditorText({ isTransactional: false });\n\n      if (path) {\n        enqueueSnackbar(`${path} saved`, { variant: 'success' });\n      }\n    };\n    platformDelegate.on('file-save-ended', onFileSaveEnded);\n\n    const onNewFileCreated = () => {\n      resetTextSelection();\n      setEditorText({ text: Text.empty, isTransactional: false });\n    };\n    platformDelegate.on('new-file-created', onNewFileCreated);\n\n    const onFileOpened = (\n      error: Error,\n      fileContents: string,\n      clearHistory: boolean\n    ) => {\n      if (error) {\n        enqueueSnackbar(\"Couldn't open selected file.\", {\n          variant: 'error',\n        });\n      } else {\n        resetTextSelection();\n        setEditorText({\n          text: Text.of(fileContents.split('\\n')),\n          isTransactional: !clearHistory,\n        });\n      }\n    };\n    platformDelegate.on('file-opened', onFileOpened);\n\n    return () => {\n      platformDelegate.removeListener(\n        'check-file-modified',\n        onCheckFileModified\n      );\n      platformDelegate.removeListener('file-save-ended', onFileSaveEnded);\n      platformDelegate.removeListener('new-file-created', onNewFileCreated);\n      platformDelegate.removeListener('file-opened', onFileOpened);\n    };\n  }, [isModified, setEditorText]);\n};\n","import { Palette } from '@lyricistant/common/theme/SystemTheme';\nimport logo from '@lyricistant/renderer/lyricistant_logo.svg';\nimport { getThemePalette } from '@lyricistant/renderer/theme';\n\nonThemeUpdated(getThemePalette().palette);\n\nlet container = document.getElementById('preload-overlay');\n\nif (!container) {\n  container = document.createElement('div');\n  container.id = 'preload-overlay';\n  document.body.append(container);\n\n  container.innerHTML = logo;\n  const image = container.firstElementChild as SVGSVGElement;\n  image.style.width = '128px';\n  image.style.height = '128px';\n  image.id = 'preload-overlay-logo';\n}\n\nexport const onPageLoaded = () => {\n  if (container) {\n    container.style.opacity = '0';\n    setTimeout(() => {\n      container?.remove();\n      container = null;\n    }, 500);\n  }\n};\n\nexport function onThemeUpdated(palette: Palette) {\n  document.body.style.setProperty('--primary', palette.primary);\n  document.body.style.setProperty('--background', palette.background);\n  document.body.style.setProperty('--surface', palette.surface);\n  document.body.style.setProperty('--text', palette.primaryText);\n}\n","import {\n  ColorScheme,\n  ThemeData,\n} from '@lyricistant/common/preferences/PreferencesData';\nimport { Palette } from '@lyricistant/common/theme/SystemTheme';\nimport {\n  createTheme as createMuiTheme,\n  responsiveFontSizes,\n  Theme,\n} from '@mui/material';\n\n/**\n * Get a theme palette based on the given theme data.\n *\n * @param themeData The optional theme data to generate a palette for.\n */\nexport const getThemePalette = (\n  themeData?: ThemeData\n): { palette: Palette; isDark: boolean } => {\n  const useDarkTheme = !themeData || themeData.colorScheme === ColorScheme.Dark;\n\n  return {\n    palette: {\n      ...(useDarkTheme ? darkThemePalette : lightThemePalette),\n      ...themeData?.systemPalette,\n    },\n    isDark: useDarkTheme,\n  };\n};\n\n/**\n * Create a MUI theme from theme data.\n *\n * @param themeData The theme data used for generating the MUI theme.\n */\nexport const createTheme = (themeData?: ThemeData): Theme => {\n  const { palette, isDark } = getThemePalette(themeData);\n\n  return responsiveFontSizes(\n    createMuiTheme({\n      palette: {\n        mode: isDark ? 'dark' : 'light',\n        action: {\n          hover: palette.primary,\n          hoverOpacity: 0,\n        },\n        primary: {\n          main: palette.primary,\n        },\n        background: {\n          default: palette.background,\n          paper: palette.surface,\n        },\n        text: {\n          primary: palette.primaryText,\n          secondary: palette.secondaryText,\n        },\n      },\n      components: {\n        MuiPaper: {\n          styleOverrides: { root: { backgroundImage: 'unset' } },\n        },\n      },\n      typography: themeData?.textSize\n        ? {\n            fontSize: themeData.textSize,\n          }\n        : undefined,\n    })\n  );\n};\n\nconst lightThemePalette: Palette = {\n  primary: '#1b5e20',\n  background: '#fafafa',\n  surface: '#eeeeee',\n  primaryText: '#212121',\n  secondaryText: '#424242',\n};\n\nconst darkThemePalette: Palette = {\n  primary: '#f2b21c',\n  background: '#141414',\n  surface: '#232323',\n  primaryText: '#f8f8f8',\n  secondaryText: '#bdbdbd',\n};\n"],"names":["_path","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","SvgLyricistantLogo","props","xmlns","viewBox","fillRule","strokeLinejoin","strokeMiterlimit","d","APP_VERSION","APP_HOMEPAGE","APP_AUTHOR","APP_PLATFORM","FORWARD_SLASH","charCodeAt","NEW_LINE","lyric","input","current","peek","next","acceptToken","Lyric","advance","parser","deserialize","version","states","stateData","goto","nodeNames","maxTerm","skippedNodes","repeatNodeCount","tokenData","tokenizers","topRules","tokenPrec","todoComment","define","context","LyricsLanguage","configure","LineComment","lineComment","TodoComment","Context","languageData","commentTokens","line","textColorSelectionStyle","appTheme","backgroundColor","palette","primary","main","color","getContrastText","nonLyricNodeTypes","getLyricNodesBetween","state","from","to","getNodesBetween","filter","node","find","name","type","nodes","cursor","cursorAt","pos","checkChild","push","placeholders","markDecoration","mark","class","setMark","map","change","mapPos","isApplicableAddMarkEffect","effect","doc","value","markStateField","create","none","update","marks","tr","effects","is","of","range","changes","provide","field","decorations","useCodeMirror","view","setView","useState","container","setContainer","resetCount","setResetCount","useTheme","themeCompartment","useMemo","textCompartment","selectionCompartment","fileDroppedCompartment","themeExtension","font","tag","text","disabled","theme","background","default","caretColor","height","overflow","outline_fallback","outline","borderColor","borderBottom","fontFamily","fontSize","typography","paddingTop","paddingBottom","paddingLeft","paddingRight","width","justifyContent","secondary","borderRight","paper","grey","A100","contrastText","border","borderRadius","margin","padding","textAlign","textDecoration","display","action","active","right","dark","mode","editorTheme","textChangedExtension","textChanged","onTextChanged","updateListener","docChanged","selectionSet","selection","selectionExtension","textSelection","onTextSelected","selectionRange","asSingle","empty","lineAt","doesNodeContainSelection","document","position","head","isDelimiter","c","exec","start","end","assoc","Math","max","substring","findWordAt","fileDroppedExtension","fileDropped","onFileDropped","domEventHandlers","drop","event","stopPropagation","preventDefault","dataTransfer","items","files","useEffect","markedText","dispatch","defaultConfig","extensions","formatNumber","lineNo","lines","supportedNodes","sliceDoc","join","joinNodesToText","toString","lineWrapping","sample","delay","tooltipFilter","newView","parent","setState","destroy","undefined","currentText","eq","insert","cursorPosition","anchor","reconfigurableExtensions","compartment","extension","configs","lastConfigs","setLastConfigs","useLayoutEffect","changedConfigs","differenceWith","isEqual","reconfigure","useReconfigurableExtension","Array","getElementsByClassName","forEach","element","setAttribute","resetHistory","useCallback","count","undo","redo","openFindReplaceDialog","diagnostics","isModified","AppError","error","editorText","onClose","window","location","reload","onCopy","navigator","clipboard","writeText","onDownloadLogs","platformDelegate","send","logger","Dialog","open","DialogTitle","Box","Typography","paragraph","Link","href","rel","variant","DialogActions","Button","onClick","aboutInfo","DividerlessTableCell","TableCell","sx","AboutDialog","className","scroll","DialogContent","Grid","spacing","direction","alignItems","item","xs","fill","TableContainer","Table","size","TableBody","keys","TableRow","fullWidth","useNavigation","setLocation","path","options","replace","supportedReleases","platform","asset","url","arch","ReleaseHelper","cachedReleases","getLatestDownloadableRelease","currentVersion","includeCurrentVersion","debug","releases","getGitHubReleases","newestRelease","tag_name","baseDownloadUrl","getBaseDownloadUrl","changelog","getChangelog","result","octokit","rest","repos","listReleases","LYRICISTANT_REPO","release","data","isReleaseNewerThanCurrent","assets","some","e","warn","currentVersionString","releaseTag","removeFilename","browser_download_url","reduce","body","lastIndexOf","owner","repo","releaseHelper","latestReleaseMachine","id","initial","releaseData","on","INPUT","inactive","loading","invoke","src","_","onDone","cond","actions","onError","loaded","releaseColor","PlatformDownloadOptions","children","DownloadButton","Accordion","boxShadow","AccordionSummary","releaseTextColor","textTransform","startIcon","ReleaseIcon","AccordionDetails","downloadLabel","ChooseDownloadDialog","useMachine","onReleaseClicked","info","list","get","set","Map","matches","CircularProgress","DownloadButtons","DialogContentText","Linux","Apple","MicrosoftWindows","Android","AppleIos","useSmallLayout","useMediaQuery","breakpoints","down","useChannel","channel","listener","deps","removeListener","useChannelData","shouldRegister","setResult","args","FileHistoryItem","ListItem","button","ListItemText","time","VisualChunkLine","foregroundColor","success","control","VisualChunk","marginBottom","divider","chunk","index","FileHistoryList","historyData","List","onFileHistoryClicked","Divider","FileHistory","setDisplayedHistory","displayedHistory","paperBounds","maxWidth","maxHeight","chunks","Drawer","PaperProps","Markdown","disableParsingRawHTML","PlatformDialogs","dialogData","setDialogData","closeDialogTag","setCloseDialogTag","setOpen","onDialogInteraction","interactionData","onClosed","AlertDialog","FullscreenDialog","onCancel","SelectionDialog","fullScreen","TransitionComponent","Grow","flexDirection","gap","message","progress","LinearProgressWithLabel","cancelable","title","collapsibleMessage","elevation","square","expandIcon","ExpandMore","label","overflowY","wordBreak","buttons","selectedButton","setSelection","isChecked","setChecked","Select","onChange","option","MenuItem","checkbox","FormGroup","FormControlLabel","Checkbox","checked","selectedOption","checkboxes","mr","LinearProgress","minWidth","round","DialogTransition","ref","Slide","Header","fontWeight","marginTop","SelectBox","FormControl","InputLabel","marginLeft","marginRight","itemLabel","itemValue","Preferences","originalPreferenceData","preferencesData","setPreferencesData","AppBar","enableColorOnDark","Toolbar","IconButton","edge","Close","flex","Save","Container","Paper","Roboto_Mono","Roboto","textSize","colorScheme","Light","Dark","System","detailPaneVisibility","Toggleable","Always_Show","rhymeSource","Offline","Datamuse","defaultFileType","Always_Ask","Lyricistant_Lyrics","Plain_Text","Info","onAboutClicked","flexGrow","PrivacyPolicy","ModalRoute","render","Modals","navigate","goBack","history","back","useBackNavigation","verbose","pathname","NullStateText","visible","textOverflow","fontStyle","p","flexWrap","toDisplayMessage","report","actual","loadDictionary","callback","dic","aff","Promise","resolve","catch","then","diagnosticsMachine","waiting","debouncing","after","file","messages","column","severity","fatal","proposals","expected","sort","left","toDiagnostics","retext","use","process","retextDiagnostics","isArray","displaying","delays","DEBOUNCE","guards","isValidInput","Diagnostics","isVisible","onLoadingChanged","onDiagnosticsLoaded","DiagnosticsList","onDiagnosticClicked","onProposalAccepted","diagnostic","DiagnosticRow","JSON","stringify","onProposalClicked","proposal","disablePadding","ListItemButton","ListItemSecondaryAction","ChevronRight","DiagnosticActionPopover","Popover","anchorEl","domRect","getBoundingClientRect","nodeType","anchorOrigin","vertical","horizontal","DiagnosticActionPopoverContent","dense","slice","ListSpacer","WordChip","word","Chip","style","dictionaryMachine","baseURL","response","meanings","inputForResult","meaning","definitions","definition","synonyms","uniq","flattenDeep","synonym","split","trim","antonyms","antonym","match","Dictionary","query","onRelatedTextClicked","MeaningList","VisualMeaning","RelatedTextLists","partOfSpeech","VisualDefinition","showHeader","example","shouldHide","Set","hasSynonyms","hasAntonyms","RelatedText","words","Rhyme","score","asyncRhymes","param","fetch","getMaxRhymeCount","ok","status","parse","increaseScore","rhymes","amount","rhyme","offlineRhymes","rhymeGenerator","generateRhymes","results","all","distinct","by","has","array","prev","concat","rhymesMachine","RhymesListItem","onRhymeClicked","RhymesList","alignContent","Rhymes","handleError","useErrorHandler","preferences","TabbedItem","selectedIndex","ToggleDetailPaneIcon","isExpanded","ChevronDown","ChevronUp","ChevronLeft","DetailButton","Fab","icon","DetailPane","tabIndex","setTabIndex","isLoading","setLoading","setExpanded","isSmallLayout","isAnimating","setIsAnimating","changeTab","onTabChanged","isQueryTab","showToggleButton","paperDisplay","in","onEnter","onExited","minHeight","Tabs","newTabIndex","TabIndicatorProps","Tab","ScriptOutline","BookAlphabet","Spellcheck","rhymeProps","dictionaryProps","diagnosticsProps","EditorContainer","EdgeFade","endColor","towards","startColor","rotation","content","zIndex","top","bottom","Editor","editor","useRef","themeData","File","getAsFile","handle","getAsFileSystemHandle","metadata","arrayBuffer","extras","reason","isTransactional","selectedText","onModificationStateChanged","selectedDiagnostic","scrollIntoView","y","yMargin","domAtPos","createRange","selectNode","setTimeout","onSelectedDiagnosticRendered","clearTimeout","useTextActionEvents","openFindReplaceModal","getRootError","stack","isReportableError","includes","MenuIcon","ariaLabel","debounce","debouncedClick","role","toMenuIcon","MenuBar","isHorizontal","setAnchor","shouldTrim","leading","trailing","currentTarget","MoreVert","transformOrigin","ListItemIcon","uiConfig","leadingIcons","AddCircle","onNewClicked","showOpen","FolderOpen","onOpenClicked","onSaveClicked","History","trailingIcons","showDownload","GetApp","onDownloadClicked","Settings","onPreferencesClicked","ResponsiveMainDetailLayout","detail","menu","isUnsupportedBrowser","Blob","WarningDialog","onContinue","oldOnError","onerror","col","rootError","console","alert","onunhandledrejection","setWindowErrorHandler","analyticsScript","createElement","allow_local","no_onload","no_events","append","timeoutId","goatcounter","site","host","setupAnalytics","getElementById","root","hashLocation","hash","hashNavigate","replaceState","internal","hasSentReadyForEvents","isDeepLink","onThemeChanged","onThemeReady","setTheme","setPalette","loadFont","StyledEngineProvider","injectFirst","ThemeProvider","GlobalStyles","styles","CssBaseline","primaryText","opacity","maxSnack","setUiConfig","isAcknowledged","setAcknowledged","showWarning","showBrowserWarning","hook","editorTextData","setEditorTextData","setError","setSelectedText","setIsModified","showQuerySelection","setShowQuerySelection","setSelectedDiagnostic","selectedDiagnosticRect","setSelectedDiagnosticRect","selectedDiagnosticKey","incrementKey","useReducer","onPartialEditorTextDataUpdate","textData","onTextReplacement","useEventCallback","prefix","sliceString","suffix","setEditorText","resetTextSelection","enqueueSnackbar","onCheckFileModified","onFileSaveEnded","onNewFileCreated","onFileOpened","fileContents","clearHistory","useFileEvents","promptOnUrlChange","onTextRequested","newError","timer","fallbackErrorRendering","onInspirationButtonClicked","isInspirationButtonEnabled","inspirationWords","setInspirationWords","useInspirationWords","newText","newPosition","isStartOfLine","isEndOfLine","startCase","isPreviousCharacterSpace","isNextCharacterSpace","useInspirationButton","useProposalAcceptance","detailPaneButtons","Dice6","ErrorBoundary","fallbackRender","onThemeUpdated","innerHTML","image","firstElementChild","onPageLoaded","remove","setProperty","surface","getThemePalette","useDarkTheme","darkThemePalette","lightThemePalette","systemPalette","isDark","createTheme","hover","hoverOpacity","secondaryText","components","MuiPaper","styleOverrides","backgroundImage"],"sourceRoot":""}